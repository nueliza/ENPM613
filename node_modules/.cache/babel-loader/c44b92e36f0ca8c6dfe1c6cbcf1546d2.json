{"ast":null,"code":"var _jsxFileName = \"/Users/annuabraham/Documents/GitHub/ENPM613/client/src/containers/modules.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Modules from '../components/modules';\nimport AdminDashboard from '../components/AdminDashboard';\nimport { Redirect } from 'react-router-dom';\nimport Loading from '../components/loading';\nimport { setSelectedModule, logoutUser } from \"../actions/userActions\";\nimport { getFlashcardSets } from \"../actions/dashboardActions\";\n\nclass ModuleContainer extends Component {\n  render() {\n    if (this.props.loginPending) return React.createElement(Loading, {\n      show: this.props.loginPending,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    });else {\n      if (this.props.userInfo.user_type === \"Student\") {\n        return React.createElement(Modules, {\n          userInfo: this.props.userInfo,\n          setSelectedModule: this.props.setSelectedModule,\n          logoutUser: this.props.logoutUser,\n          logoutSucess: this.props.logoutSucess,\n          logoutFailed: this.props.logoutFailed,\n          logoutPending: this.props.logoutPending,\n          toastMessage: this.props.toastMessage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        });\n      } else if (this.props.userInfo.user_type === \"Tutor\") {\n        return React.createElement(Redirect, {\n          to: {\n            pathname: '/dashboard'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(AdminDashboard, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        });\n      }\n    }\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  userInfo: state.user.userInfo,\n  loginPending: state.user.loginPending,\n  logoutPending: state.user.logoutPending,\n  logoutSucess: state.user.logoutSucess,\n  logoutFailed: state.user.logoutFailed,\n  toastMessage: state.toast.toastMessage\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setSelectedModule: modules => dispatch(setSelectedModule(modules)),\n    getFlashcardSets: payload => dispatch(getFlashcardSets(payload)),\n    logoutUser: () => dispatch(logoutUser())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModuleContainer);","map":{"version":3,"sources":["/Users/annuabraham/Documents/GitHub/ENPM613/client/src/containers/modules.js"],"names":["React","Component","connect","Modules","AdminDashboard","Redirect","Loading","setSelectedModule","logoutUser","getFlashcardSets","ModuleContainer","render","props","loginPending","userInfo","user_type","logoutSucess","logoutFailed","logoutPending","toastMessage","pathname","mapStateToProps","state","user","toast","mapDispatchToProps","dispatch","modules","payload"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AAEA,SAASC,iBAAT,EAA4BC,UAA5B,QAA8C,wBAA9C;AACA,SAASC,gBAAT,QAAiC,6BAAjC;;AAEA,MAAMC,eAAN,SAA8BT,SAA9B,CAAwC;AACtCU,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKC,KAAL,CAAWC,YAAf,EACC,OAAO,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP,CADD,KAEK;AACH,UAAI,KAAKD,KAAL,CAAWE,QAAX,CAAoBC,SAApB,KAAkC,SAAtC,EAAiD;AAC/C,eAAO,oBAAC,OAAD;AACL,UAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWE,QADhB;AAEL,UAAA,iBAAiB,EAAE,KAAKF,KAAL,CAAWL,iBAFzB;AAGL,UAAA,UAAU,EAAI,KAAKK,KAAL,CAAWJ,UAHpB;AAIL,UAAA,YAAY,EAAI,KAAKI,KAAL,CAAWI,YAJtB;AAKL,UAAA,YAAY,EAAI,KAAKJ,KAAL,CAAWK,YALtB;AAML,UAAA,aAAa,EAAI,KAAKL,KAAL,CAAWM,aANvB;AAOL,UAAA,YAAY,EAAI,KAAKN,KAAL,CAAWO,YAPtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AASD,OAVD,MAWK,IAAI,KAAKP,KAAL,CAAWE,QAAX,CAAoBC,SAApB,KAAkC,OAAtC,EAA+C;AAClD,eAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAE;AACnBK,YAAAA,QAAQ,EAAE;AADS,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAGD,OAJI,MAKA;AACH,eAAO,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AACF;AACF;;AAzBqC;;AA2BxC,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCR,EAAAA,QAAQ,EAAEQ,KAAK,CAACC,IAAN,CAAWT,QADW;AAEhCD,EAAAA,YAAY,EAAES,KAAK,CAACC,IAAN,CAAWV,YAFO;AAGhCK,EAAAA,aAAa,EAAEI,KAAK,CAACC,IAAN,CAAWL,aAHM;AAIhCF,EAAAA,YAAY,EAAEM,KAAK,CAACC,IAAN,CAAWP,YAJO;AAKhCC,EAAAA,YAAY,EAAEK,KAAK,CAACC,IAAN,CAAWN,YALO;AAMhCE,EAAAA,YAAY,EAAEG,KAAK,CAACE,KAAN,CAAYL;AANM,CAAL,CAA7B;;AASA,MAAMM,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLnB,IAAAA,iBAAiB,EAAGoB,OAAD,IAAaD,QAAQ,CAACnB,iBAAiB,CAACoB,OAAD,CAAlB,CADnC;AAELlB,IAAAA,gBAAgB,EAAGmB,OAAD,IAAaF,QAAQ,CAACjB,gBAAgB,CAACmB,OAAD,CAAjB,CAFlC;AAGLpB,IAAAA,UAAU,EAAE,MAAIkB,QAAQ,CAAClB,UAAU,EAAX;AAHnB,GAAP;AAKD,CAND;;AAQA,eAAeN,OAAO,CAACmB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6Cf,eAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Modules from '../components/modules';\nimport AdminDashboard from '../components/AdminDashboard';\nimport { Redirect } from 'react-router-dom';\nimport Loading from '../components/loading';\n\nimport { setSelectedModule, logoutUser } from \"../actions/userActions\";\nimport { getFlashcardSets } from \"../actions/dashboardActions\";\n\nclass ModuleContainer extends Component {\n  render() {\n    if (this.props.loginPending)\n     return <Loading show={this.props.loginPending} />\n    else {\n      if (this.props.userInfo.user_type === \"Student\") {\n        return <Modules\n          userInfo={this.props.userInfo}\n          setSelectedModule={this.props.setSelectedModule}\n          logoutUser = {this.props.logoutUser}\n          logoutSucess = {this.props.logoutSucess}\n          logoutFailed = {this.props.logoutFailed}\n          logoutPending = {this.props.logoutPending}\n          toastMessage = {this.props.toastMessage}\n        />\n      }\n      else if (this.props.userInfo.user_type === \"Tutor\") {\n        return <Redirect to={{\n          pathname: '/dashboard'\n        }} />\n      }\n      else {\n        return <AdminDashboard />\n      }\n    }\n  }\n}\nconst mapStateToProps = state => ({\n  userInfo: state.user.userInfo,\n  loginPending: state.user.loginPending,\n  logoutPending: state.user.logoutPending,\n  logoutSucess: state.user.logoutSucess,\n  logoutFailed: state.user.logoutFailed,\n  toastMessage: state.toast.toastMessage\n})\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setSelectedModule: (modules) => dispatch(setSelectedModule(modules)),\n    getFlashcardSets: (payload) => dispatch(getFlashcardSets(payload)),\n    logoutUser: ()=>dispatch(logoutUser())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModuleContainer)"]},"metadata":{},"sourceType":"module"}