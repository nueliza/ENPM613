{"ast":null,"code":"var _jsxFileName = \"/Users/annuabraham/Documents/GitHub/ENPM613/client/src/components/discussions/createDiscussion.js\";\nimport React, { Component, Fragment } from 'react';\n\nclass CreateDiscussion extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      let discussion = this.state.discussion;\n      discussion[e.target.id] = e.target.value;\n      this.setState({\n        discussion: discussion\n      });\n    };\n\n    this.handleSubmit = e => {\n      //TODO: validation of input fields.\n      let discussion = this.state.discussion;\n      this.isFormValid();\n    };\n\n    this.isFormValid = () => {\n      let errors = this.state.errors;\n      let discussion = this.state.discussion;\n    };\n\n    this.isValidField = (fieldValue, fieldType) => {\n      let errors = this.state.errors;\n      fieldValue === \"\" ? (errors[fieldType = \"Discussion \".concat(fieldType, \" is required\")], this.setState({\n        formValid: false\n      })) : this.setState({\n        formValid: true\n      });\n    };\n\n    this.state = {\n      discussion: {\n        content: \"\",\n        header: \"\"\n      },\n      errors: {\n        content: \"\",\n        header: \"\"\n      },\n      formValid: false\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"dashboard_body discussion_body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Start a Discussion\"), React.createElement(\"div\", {\n      className: \"NewDiscussionWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Discussion Heading\", React.createElement(\"input\", {\n      type: \"text\",\n      id: \"header\",\n      placeholder: \"Type Discussion heading here...\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, this.state.errors.header), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), \"Discussion Content\", React.createElement(\"textarea\", {\n      className: \"form-control\",\n      id: \"content\",\n      placeholder: \"Type Discussion Content here...\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, this.state.errors.content), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nexport default CreateDiscussion;","map":{"version":3,"sources":["/Users/annuabraham/Documents/GitHub/ENPM613/client/src/components/discussions/createDiscussion.js"],"names":["React","Component","Fragment","CreateDiscussion","constructor","props","handleChange","e","discussion","state","target","id","value","setState","handleSubmit","isFormValid","errors","isValidField","fieldValue","fieldType","formValid","content","header","render"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\n\nclass CreateDiscussion extends Component {\n    constructor(props){\n        super(props);\n        this.state ={\n            discussion: {content: \"\", header: \"\"},\n            errors: {content: \"\", header:\"\"},\n            formValid: false\n        }\n    }\n\n    handleChange = (e) =>{\n        let discussion = this.state.discussion;\n        discussion[e.target.id] = e.target.value;\n        this.setState({discussion: discussion});\n    }\n\n    handleSubmit = (e) =>{\n        //TODO: validation of input fields.\n        let discussion =  this.state.discussion;\n        this.isFormValid()\n    }\n\n    isFormValid = () =>{\n        let errors =this.state.errors;\n        let discussion = this.state.discussion;\n\n        \n\n    }\n\n    isValidField = (fieldValue, fieldType) =>{\n\n        let errors = this.state.errors;\n        fieldValue === \"\"? (errors[fieldType = `Discussion ${fieldType} is required`], this.setState({formValid: false})): (\n            this.setState({formValid:  true})\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"dashboard_body discussion_body\">\n                <h3>Start a Discussion</h3>\n                <div className=\"NewDiscussionWrapper\">\n                    Discussion Heading\n                    <input\n                        type=\"text\"\n                        id=\"header\"\n                        placeholder=\"Type Discussion heading here...\"\n                        onChange= {this.handleChange}\n                    />\n                    <span className=\"errorMessage\">{this.state.errors.header}</span>\n                    <br />\n                    <br />\n                    Discussion Content\n                    <textarea\n                        className=\"form-control\"\n                        id=\"content\"\n                        placeholder=\"Type Discussion Content here...\"\n                        onChange={this.handleChange}\n                    />\n                    <span className=\"errorMessage\">{this.state.errors.content}</span>\n                    <br />\n                    <br />\n                    <button \n                        className=\"btn btn-success\"\n                        onClick={this.handleSubmit} >\n                        Submit\n                    </button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CreateDiscussion"]},"metadata":{},"sourceType":"module"}