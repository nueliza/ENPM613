{"ast":null,"code":"function mark(data, type, transformMethod) {\n  return {\n    data: transformMethod ? data[transformMethod]() : data,\n    __serializedType__: type\n  };\n}\n\nfunction extract(data, type) {\n  return {\n    data: Object.assign({}, data),\n    __serializedType__: type\n  };\n}\n\nfunction refer(data, type, isArray, refs) {\n  var r = mark(data, type, isArray);\n  if (!refs) return r;\n\n  for (var i = 0; i < refs.length; i++) {\n    var ref = refs[i];\n\n    if (typeof ref === 'function' && data instanceof ref) {\n      r.__serializedRef__ = i;\n      return r;\n    }\n  }\n\n  return r;\n}\n\nmodule.exports = {\n  mark: mark,\n  extract: extract,\n  refer: refer\n};","map":null,"metadata":{},"sourceType":"script"}