{"ast":null,"code":"var _jsxFileName = \"/Users/annuabraham/Documents/GitHub/ENPM613/client/src/containers/modules.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Modules from '../components/modules';\nimport AdminDashboard from '../components/AdminDashboard';\nimport { Redirect } from 'react-router-dom';\nimport Loading from '../components/loading';\nimport { setSelectedModule } from \"../actions/userActions\";\nimport { getFlashcardSets } from \"../actions/dashboardActions\";\n\nclass ModuleContainer extends Component {\n  render() {\n    if (this.props.loginPending) return React.createElement(Loading, {\n      show: this.props.loginPending,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    });else {\n      if (this.props.userInfo.user_type === \"Student\") {\n        return React.createElement(Modules, {\n          userInfo: this.props.userInfo,\n          setSelectedModule: this.props.setSelectedModule,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        });\n      } else if (this.props.userInfo.user_type === \"Tutor\") {\n        return React.createElement(Redirect, {\n          to: {\n            pathname: '/dashboard'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(AdminDashboard, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        });\n      }\n    }\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  userInfo: state.user.userInfo,\n  logoutPendin\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setSelectedModule: modules => dispatch(setSelectedModule(modules)),\n    getFlashcardSets: payload => dispatch(getFlashcardSets(payload))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModuleContainer);","map":{"version":3,"sources":["/Users/annuabraham/Documents/GitHub/ENPM613/client/src/containers/modules.js"],"names":["React","Component","connect","Modules","AdminDashboard","Redirect","Loading","setSelectedModule","getFlashcardSets","ModuleContainer","render","props","loginPending","userInfo","user_type","pathname","mapStateToProps","state","user","logoutPendin","mapDispatchToProps","dispatch","modules","payload"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AAEA,SAASC,iBAAT,QAAkC,wBAAlC;AACA,SAASC,gBAAT,QAAiC,6BAAjC;;AAEA,MAAMC,eAAN,SAA8BR,SAA9B,CAAwC;AACtCS,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKC,KAAL,CAAWC,YAAf,EACC,OAAO,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP,CADD,KAEK;AACH,UAAI,KAAKD,KAAL,CAAWE,QAAX,CAAoBC,SAApB,KAAkC,SAAtC,EAAiD;AAC/C,eAAO,oBAAC,OAAD;AACL,UAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWE,QADhB;AAEL,UAAA,iBAAiB,EAAE,KAAKF,KAAL,CAAWJ,iBAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAID,OALD,MAMK,IAAI,KAAKI,KAAL,CAAWE,QAAX,CAAoBC,SAApB,KAAkC,OAAtC,EAA+C;AAClD,eAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAE;AACnBC,YAAAA,QAAQ,EAAE;AADS,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAGD,OAJI,MAKA;AACH,eAAO,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AACF;AACF;;AApBqC;;AAsBxC,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCJ,EAAAA,QAAQ,EAAEI,KAAK,CAACC,IAAN,CAAWL,QADW;AAEhCM,EAAAA;AAFgC,CAAL,CAA7B;;AAKA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLd,IAAAA,iBAAiB,EAAGe,OAAD,IAAaD,QAAQ,CAACd,iBAAiB,CAACe,OAAD,CAAlB,CADnC;AAELd,IAAAA,gBAAgB,EAAGe,OAAD,IAAaF,QAAQ,CAACb,gBAAgB,CAACe,OAAD,CAAjB;AAFlC,GAAP;AAID,CALD;;AAOA,eAAerB,OAAO,CAACc,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CX,eAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Modules from '../components/modules';\nimport AdminDashboard from '../components/AdminDashboard';\nimport { Redirect } from 'react-router-dom';\nimport Loading from '../components/loading';\n\nimport { setSelectedModule } from \"../actions/userActions\";\nimport { getFlashcardSets } from \"../actions/dashboardActions\";\n\nclass ModuleContainer extends Component {\n  render() {\n    if (this.props.loginPending)\n     return <Loading show={this.props.loginPending} />\n    else {\n      if (this.props.userInfo.user_type === \"Student\") {\n        return <Modules\n          userInfo={this.props.userInfo}\n          setSelectedModule={this.props.setSelectedModule}\n        />\n      }\n      else if (this.props.userInfo.user_type === \"Tutor\") {\n        return <Redirect to={{\n          pathname: '/dashboard'\n        }} />\n      }\n      else {\n        return <AdminDashboard />\n      }\n    }\n  }\n}\nconst mapStateToProps = state => ({\n  userInfo: state.user.userInfo,\n  logoutPendin\n})\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setSelectedModule: (modules) => dispatch(setSelectedModule(modules)),\n    getFlashcardSets: (payload) => dispatch(getFlashcardSets(payload))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModuleContainer)"]},"metadata":{},"sourceType":"module"}