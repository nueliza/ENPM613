{"ast":null,"code":"var _jsxFileName = \"/Users/annuabraham/Documents/GitHub/ENPM613/client/src/components/modal/index.js\";\nimport React, { Component } from 'react';\nimport Modal from \"react-responsive-modal\";\nimport { iconMapping } from \"../utils/iconsMapping.js\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Dropzone from \"../dropzone/Dropzone\";\n\nclass FileUploadModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onFilesAdded = files => {\n      this.setState(prevState => ({\n        files: prevState.files.concat(files),\n        upload: true\n      }));\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        fileName: e.target.value\n      });\n    };\n\n    this.uploadFiles = e => {\n      //TODO service call to upload file\n      this.props.onCloseModal();\n    };\n\n    this.state = {\n      files: [],\n      uploaded: false,\n      uploadProgress: {},\n      successfullUploaded: false,\n      fileName: \"\"\n    };\n  }\n\n  render() {\n    return React.createElement(Modal, {\n      open: this.props.isVisible,\n      onClose: this.props.onCloseModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Upload\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"Title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Upload Files\"), React.createElement(\"div\", {\n      className: \"Content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"File Name: \", React.createElement(\"input\", {\n      type: \"text\",\n      className: \"fileName\",\n      placeholder: \"Type File name here...\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Dropzone, {\n      onFilesAdded: this.onFilesAdded,\n      disabled: this.state.uploading || this.state.successfullUploaded,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"Files\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, this.state.files.map(file => {\n      return React.createElement(\"div\", {\n        key: file.name,\n        className: \"Row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"Filename\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, file.name));\n    }))), React.createElement(\"div\", {\n      className: \"Actions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      disabled: this.state.files.length === 0 || this.state.uploaded,\n      onClick: this.uploadFiles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Upload\"))));\n  }\n\n}\n\nexport default FileUploadModal;","map":{"version":3,"sources":["/Users/annuabraham/Documents/GitHub/ENPM613/client/src/components/modal/index.js"],"names":["React","Component","Modal","iconMapping","FontAwesomeIcon","Dropzone","FileUploadModal","constructor","props","onFilesAdded","files","setState","prevState","concat","upload","handleChange","e","fileName","target","value","uploadFiles","onCloseModal","state","uploaded","uploadProgress","successfullUploaded","render","isVisible","uploading","map","file","name","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Modal from \"react-responsive-modal\";\nimport { iconMapping } from \"../utils/iconsMapping.js\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Dropzone from \"../dropzone/Dropzone\";\n\nclass FileUploadModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            files: [],\n            uploaded: false,\n            uploadProgress: {},\n            successfullUploaded: false,\n            fileName: \"\"\n        };\n    }\n    onFilesAdded = (files) => {\n        this.setState(prevState => ({\n            files: prevState.files.concat(files), upload: true\n        }));\n    }\n\n    handleChange = (e) =>{\n        this.setState({fileName: e.target.value})\n    }\n\n    uploadFiles = (e) =>{\n        //TODO service call to upload file\n        this.props.onCloseModal()\n    }\n\n    render() {\n        return (\n            <Modal open={this.props.isVisible} onClose={this.props.onCloseModal}>\n                <div className=\"Upload\">\n                    <span className=\"Title\">Upload Files</span>\n                    <div className=\"Content\">\n                        <div>\n                            File Name: <input type=\"text\" className=\"fileName\" placeholder=\"Type File name here...\" onChange={this.handleChange} />\n                            <br />\n                        </div>\n                        <div>\n                            <Dropzone\n                                onFilesAdded={this.onFilesAdded}\n                                disabled={this.state.uploading || this.state.successfullUploaded}\n                            />\n                        </div>\n                        <div className=\"Files\">\n                            {this.state.files.map(file => {\n                            return (\n                                <div key={file.name} className=\"Row\">\n                                <span className=\"Filename\">{file.name}</span>\n                                </div>\n                            );\n                            })}\n                        </div>\n                        \n                    </div>\n                    <div className=\"Actions\">\n                        <button\n                            disabled={this.state.files.length === 0 || this.state.uploaded}\n                            onClick={this.uploadFiles}\n                        >\n                            Upload\n                        </button>\n                    </div>\n                </div>\n            </Modal>)\n    }\n}\nexport default FileUploadModal;"]},"metadata":{},"sourceType":"module"}