{"ast":null,"code":"var _jsxFileName = \"/Users/annuabraham/Documents/GitHub/ENPM613/client/src/components/exams/takeExam.js\";\nimport React, { Component } from 'react';\nimport \"./exams.css\";\n\nconst ExamQuestions = props => {\n  return props.sampleExam.map((question, id) => {\n    return React.createElement(\"div\", {\n      className: \"group\",\n      key: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, \"\".concat(id + 1, \". \").concat(question.question)), React.createElement(\"div\", {\n      className: \"optionGroup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, question.options.map((option, idx) => {\n      return React.createElement(React.Fragment, {\n        key: idx,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        id: \"\".concat(question.questionId, \"-\").concat(idx),\n        name: question.questionId,\n        value: option,\n        onChange: props.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }), \"\\xA0\", React.createElement(\"label\", {\n        htmlFor: \"\".concat(question.questionId, \"-\").concat(idx),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, option), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }));\n    })));\n  });\n};\n\nclass TakeExam extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      const questionId = e.target.name;\n      const response = e.target.value;\n      const updatedQuestion = this.state.studentResponse.find(item => item.questionId == questionId);\n\n      if (updatedQuestion == undefined) {\n        this.setState(prevState => ({\n          studentResponse: [...prevState.studentResponse, {\n            questionId: questionId,\n            response: response\n          }]\n        }));\n      }\n    };\n\n    this.handleSubmit = e => {\n      console.log(this.state.studentResponse); //service call to submit exam\n\n      this.props.history.push(\"/exams\");\n    };\n\n    this.state = {\n      sampleExam: [{\n        questionId: 123,\n        question: \"How old are you?\",\n        options: [\"20 years\", \"30 years\", \"35 years\"]\n      }, {\n        questionId: 234,\n        question: \"Are you enrolled in a program?\",\n        options: [\"True\", \"false\"]\n      }],\n      studentResponse: []\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"dashboard_body exam_body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dashboard_subSection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Exam Name\"), React.createElement(\"div\", {\n      className: \"examWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(ExamQuestions, {\n      sampleExam: this.state.sampleExam,\n      handleChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Submit\"))));\n  }\n\n}\n\nexport default TakeExam;","map":{"version":3,"sources":["/Users/annuabraham/Documents/GitHub/ENPM613/client/src/components/exams/takeExam.js"],"names":["React","Component","ExamQuestions","props","sampleExam","map","question","id","options","option","idx","questionId","handleChange","TakeExam","constructor","e","target","name","response","value","updatedQuestion","state","studentResponse","find","item","undefined","setState","prevState","handleSubmit","console","log","history","push","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport \"./exams.css\";\n\nconst ExamQuestions =(props) =>{\n    return(\n        props.sampleExam.map((question, id)=>{\n            return(\n                <div className=\"group\" key={id}>\n                    <label>{`${id+1}. ${question.question}`}</label>\n                    <div className=\"optionGroup\">\n                    {question.options.map((option, idx)=>{\n                        return(\n                            <React.Fragment key={idx}>\n                                <input \n                                    type=\"radio\" \n                                    id={`${question.questionId}-${idx}`} \n                                    name={question.questionId} \n                                    value={option}\n                                    onChange={props.handleChange}/>\n                                &nbsp;\n                                <label htmlFor={`${question.questionId}-${idx}`}>{option}</label>\n                                <br />\n                            </React.Fragment>\n                        )\n                    })}\n                    </div>\n                </div>\n            )\n        })\n    );\n}\n\nclass TakeExam extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sampleExam: [{ questionId: 123, question: \"How old are you?\", options: [\"20 years\", \"30 years\", \"35 years\"] }, \n            { questionId: 234, question: \"Are you enrolled in a program?\", options: [\"True\", \"false\"] }],\n            studentResponse: []\n        }\n    }\n\n    handleChange = (e) =>{\n        const questionId = e.target.name;\n        const response = e.target.value;\n        const updatedQuestion = this.state.studentResponse.find((item)=> item.questionId == questionId);\n        if(updatedQuestion == undefined){\n            this.setState((prevState)=>({studentResponse : \n                [...prevState.studentResponse, \n                    {questionId: questionId,response: response}]\n            }));\n        }\n    }\n\n    handleSubmit = (e) =>{\n        console.log(this.state.studentResponse)\n        //service call to submit exam\n        this.props.history.push(\"/exams\")\n    }\n\n    render() {\n        return (\n            <div className=\"dashboard_body exam_body\">\n                <div className=\"dashboard_subSection\">\n                    <h2>Exam Name</h2>\n                    <div className=\"examWrapper\">\n                        <ExamQuestions\n                            sampleExam = {this.state.sampleExam}\n                            handleChange ={this.handleChange}\n                        />\n                        <button className=\"btn btn-success\" onClick={this.handleSubmit} >\n                            Submit\n                        </button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default TakeExam;"]},"metadata":{},"sourceType":"module"}