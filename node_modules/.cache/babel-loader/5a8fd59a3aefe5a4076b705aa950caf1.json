{"ast":null,"code":"/**\n * Conatins all the service handlers for the student related actions\n */\nimport * as actionTypes from \"./actionTypes\";\nimport { student_list_response } from \"../fakeData\";\nimport Cookies from 'universal-cookie';\nconst baseUrl = \"https://get-sat-pro.herokuapp.com/api\";\nconst cookies = new Cookies();\n/**\n * gets the list of students after communicating with the get_students API\n */\n//credentials: 'include' sends the cookie along with request. fetch by default does not inlude cookies\n\nexport function getStudentList() {\n  return async dispatch => {\n    dispatch({\n      type: actionTypes.GET_STUDENT_LIST_STARTED\n    });\n    return fetch(\"\".concat(baseUrl, \"/get_students\"), {\n      method: \"GET\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'Authorization': \"Bearer \".concat(localStorage.getItem(\"token\")),\n        'cookie': cookies.get('session')\n      },\n      credentials: 'include'\n    }).then(response => response.json()).then(payload => {\n      if (student_list_response.Status === 200) {\n        dispatch({\n          type: actionTypes.GET_STUDENT_LIST_SUCCESS,\n          payload: student_list_response.students\n        });\n      } else {\n        dispatch({\n          type: actionTypes.GET_STUDENT_LIST_SUCCESS,\n          error: student_list_response.students\n        });\n      }\n    });\n  };\n}","map":{"version":3,"sources":["/Users/annuabraham/Documents/GitHub/ENPM613/client/src/actions/studentHandler.js"],"names":["actionTypes","student_list_response","Cookies","baseUrl","cookies","getStudentList","dispatch","type","GET_STUDENT_LIST_STARTED","fetch","method","headers","localStorage","getItem","get","credentials","then","response","json","payload","Status","GET_STUDENT_LIST_SUCCESS","students","error"],"mappings":"AAAA;;;AAGA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,SAASC,qBAAT,QAAsC,aAAtC;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,MAAMC,OAAO,GAAG,uCAAhB;AAEA,MAAMC,OAAO,GAAG,IAAIF,OAAJ,EAAhB;AAGA;;;AAIA;;AACA,OAAO,SAASG,cAAT,GAA0B;AAC7B,SAAO,MAAMC,QAAN,IAAkB;AACrBA,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEP,WAAW,CAACQ;AADb,KAAD,CAAR;AAGA,WAAOC,KAAK,WAAIN,OAAJ,oBAA2B;AACnCO,MAAAA,MAAM,EAAE,KAD2B;AAEnCC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,kBAAU,kBAFL;AAGL,0CAA2BC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA3B,CAHK;AAIL,kBAAUT,OAAO,CAACU,GAAR,CAAY,SAAZ;AAJL,OAF0B;AAQnCC,MAAAA,WAAW,EAAE;AARsB,KAA3B,CAAL,CAUNC,IAVM,CAUDC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAVX,EAWNF,IAXM,CAWDG,OAAO,IAAI;AACb,UAAIlB,qBAAqB,CAACmB,MAAtB,KAAiC,GAArC,EAA0C;AACtCd,QAAAA,QAAQ,CAAC;AACLC,UAAAA,IAAI,EAAEP,WAAW,CAACqB,wBADb;AAELF,UAAAA,OAAO,EAAElB,qBAAqB,CAACqB;AAF1B,SAAD,CAAR;AAIH,OALD,MAMK;AACDhB,QAAAA,QAAQ,CAAC;AACLC,UAAAA,IAAI,EAAEP,WAAW,CAACqB,wBADb;AAELE,UAAAA,KAAK,EAAEtB,qBAAqB,CAACqB;AAFxB,SAAD,CAAR;AAIH;AACJ,KAxBM,CAAP;AAyBH,GA7BD;AA8BD","sourcesContent":["/**\n * Conatins all the service handlers for the student related actions\n */\nimport * as actionTypes from \"./actionTypes\";\nimport { student_list_response } from \"../fakeData\";\nimport Cookies from 'universal-cookie';\nconst baseUrl = \"https://get-sat-pro.herokuapp.com/api\";\n\nconst cookies = new Cookies();\n\n\n/**\n * gets the list of students after communicating with the get_students API\n */\n\n//credentials: 'include' sends the cookie along with request. fetch by default does not inlude cookies\nexport function getStudentList() {\n    return async dispatch => {\n        dispatch({\n            type: actionTypes.GET_STUDENT_LIST_STARTED\n        });\n        return fetch(`${baseUrl}/get_students`,{\n            method: \"GET\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n                'Authorization': `Bearer ${localStorage.getItem(\"token\")}`,\n                'cookie': cookies.get('session')\n            },\n            credentials: 'include'\n        })\n        .then(response => response.json())\n        .then(payload => {\n            if (student_list_response.Status === 200) {\n                dispatch({\n                    type: actionTypes.GET_STUDENT_LIST_SUCCESS,\n                    payload: student_list_response.students\n                })\n            }\n            else {\n                dispatch({\n                    type: actionTypes.GET_STUDENT_LIST_SUCCESS,\n                    error: student_list_response.students\n                })\n            }\n        })\n    }\n  }\n"]},"metadata":{},"sourceType":"module"}