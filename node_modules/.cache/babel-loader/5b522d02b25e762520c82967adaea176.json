{"ast":null,"code":"import _defineProperty from \"/Users/annuabraham/Documents/GitHub/ENPM613/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as actionTypes from \"../actions/actionTypes\";\nconst initialState = {\n  toastMessage: \"\"\n};\n\nconst toastReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.LOGIN_USER_SUCESS:\n      return _objectSpread({}, state, {\n        toastMessage: \"User Successfully Logged In\"\n      });\n\n    case actionTypes.REGISTRATION_SUCCESS:\n      return _objectSpread({}, state, {\n        toastMessage: action.payload\n      });\n\n    case actionTypes.LOGOUT_USER_SUCESS:\n      return _objectSpread({}, state, {\n        toastMessage: action.payload\n      });\n\n    case actionTypes.CREATE_EXAM_SUCCESS:\n      return _objectSpread({}, state, {\n        toastMessage: action.payload\n      });\n\n    case actionTypes.RESET_TOAST:\n      return _objectSpread({}, state, {\n        toastMessage: \"\"\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default toastReducer;","map":{"version":3,"sources":["/Users/annuabraham/Documents/GitHub/ENPM613/client/src/reducers/toastReducer.js"],"names":["actionTypes","initialState","toastMessage","toastReducer","state","action","type","LOGIN_USER_SUCESS","REGISTRATION_SUCCESS","payload","LOGOUT_USER_SUCESS","CREATE_EXAM_SUCCESS","RESET_TOAST"],"mappings":";;;;;;AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,YAAY,EAAE;AADG,CAArB;;AAIA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,WAAW,CAACO,iBAAjB;AACI,+BAAWH,KAAX;AAAkBF,QAAAA,YAAY,EAAE;AAAhC;;AAEJ,SAAKF,WAAW,CAACQ,oBAAjB;AACI,+BAAWJ,KAAX;AAAkBF,QAAAA,YAAY,EAAEG,MAAM,CAACI;AAAvC;;AACJ,SAAKT,WAAW,CAACU,kBAAjB;AACI,+BAAWN,KAAX;AAAkBF,QAAAA,YAAY,EAAEG,MAAM,CAACI;AAAvC;;AAEJ,SAAKT,WAAW,CAACW,mBAAjB;AACI,+BAAUP,KAAV;AAAiBF,QAAAA,YAAY,EAAEG,MAAM,CAACI;AAAtC;;AAGJ,SAAKT,WAAW,CAACY,WAAjB;AACI,+BAAWR,KAAX;AAAkBF,QAAAA,YAAY,EAAE;AAAhC;;AACJ;AACI,aAAOE,KAAP;AAhBR;AAkBH,CAnBD;;AAqBA,eAAeD,YAAf","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n    toastMessage: \"\"\n}\n\nconst toastReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.LOGIN_USER_SUCESS:\n            return{ ...state, toastMessage: \"User Successfully Logged In\"}\n\n        case actionTypes.REGISTRATION_SUCCESS:\n            return{ ...state, toastMessage: action.payload}\n        case actionTypes.LOGOUT_USER_SUCESS:\n            return{ ...state, toastMessage: action.payload}\n\n        case actionTypes.CREATE_EXAM_SUCCESS:\n            return{...state, toastMessage: action.payload}\n\n        \n        case actionTypes.RESET_TOAST: \n            return{ ...state, toastMessage: \"\"}\n        default:\n            return state\n    }\n}\n\nexport default toastReducer;"]},"metadata":{},"sourceType":"module"}