{"ast":null,"code":"var _jsxFileName = \"/Users/annuabraham/Documents/GitHub/ENPM613/client/src/components/registration/index.js\";\nimport React, { Component, Fragment } from 'react';\nimport Modal from \"react-responsive-modal\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser, faLock, faEnvelope, faPhone, faUserCircle } from '@fortawesome/free-solid-svg-icons';\nimport './registeration.css';\nimport ErrorMessage from \"../ErrorMessage\";\n\nclass Registration extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      let registrationInfo = this.state.registrationInfo;\n\n      if (e.target.name !== \"terms\") {\n        registrationInfo[e.target.name] = e.target.value;\n        this.setState({\n          registrationInfo\n        });\n      } else {\n        this.setState({\n          isTermsChecked: e.target.checked\n        });\n      }\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.validateField(\"fname\");\n      this.validateField(\"lname\");\n      this.validateField(\"password\");\n      this.validateField(\"username\");\n      this.validateField(\"email\");\n      this.validateField(\"phone\");\n    };\n\n    this.validateField = field => {\n      let fname = this.state.registrationInfo[\"fname\"];\n      let lname = this.state.registrationInfo[\"lname\"];\n      let password = this.state.registrationInfo[\"password\"];\n      let username = this.state.registrationInfo[\"username\"];\n      let email = this.state.registrationInfo[\"email\"];\n      console.log(\"Fname\", /^[a-zA-Z]+$/.test(fname)); //Validate Fname \n      //  this.setState({fnameError: fname === \"\"? \"Please enter your first name\": \"\"})\n      //  this.setState({ fnameError: (!/^[a-zA-Z]+$/.test(fname)? \"Please enter a valid first name\": \"\")})\n      //  this.setState({lnameError: lname === \"\" ? \"Please enter your lastname\": \"\"})\n\n      switch (field) {\n        case \"fname\":\n          {\n            if (fname === \"\") {\n              this.setState({\n                fnameError: \"First name is required\"\n              });\n            } else {\n              if (!/^[a-zA-Z]+$/.test(fname)) {\n                this.setState({\n                  fnameError: \"Please enter a valid first name\"\n                });\n              } else {\n                this.setState({\n                  fnameError: \"\"\n                });\n              }\n            }\n          }\n          break;\n\n        case \"lname\":\n          {\n            if (lname === \"\") {\n              this.setState({\n                lnameError: \"Last name is required\"\n              });\n            } else {\n              if (!/^[a-zA-Z]+$/.test(lname)) {\n                this.setState({\n                  lnameError: \"Please enter a valid last name\"\n                });\n              } else {\n                this.setState({\n                  lnameError: \"\"\n                });\n              }\n            }\n          }\n          break;\n\n        case \"password\":\n          {\n            if (password === \"\") {\n              this.setState({\n                passwordError: \"Password is required\"\n              });\n            }\n          }\n          break;\n\n        case \"username\":\n          {\n            if (username === \"\") {\n              this.setState({\n                usernameError: \"Username is required\"\n              });\n            }\n          }\n          break;\n\n        case \"email\":\n          {\n            if (email === \"\") {\n              this.setState({\n                emailIdError: \"Email id is required\"\n              });\n            }\n          }\n          break;\n\n        case \"phone\":\n          {\n            if (phone === \"\") {\n              this.setState({\n                phoneError: \"Phone number is required\"\n              });\n            }\n          }\n      }\n    };\n\n    this.state = {\n      registrationInfo: {\n        fname: \"\",\n        lname: \"\",\n        username: \"\",\n        password: \"\",\n        emailId: \"\",\n        phone: \"\",\n        role_id: 1\n      },\n      fnameError: \"\",\n      lnameError: \"\",\n      usernameError: \"\",\n      passwordError: \"\",\n      emailIdError: \"\",\n      phoneError: \"\",\n      isFormValid: false,\n      isTermsChecked: false,\n      termsError: \"\"\n    };\n  }\n\n  render() {\n    console.log(\"Registration\", this.state);\n    return React.createElement(Modal, {\n      open: this.props.showModal,\n      onClose: this.props.onCloseModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"RegistrationWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Sign Up\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group nameField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faUser,\n      size: \"2x\",\n      color: \"gray\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"fname\",\n      placeholder: \"Your First name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"lname\",\n      placeholder: \"Your last name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      content: this.state.fnameError,\n      messageType: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      content: this.state.lnameError,\n      messageType: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faUserCircle,\n      size: \"2x\",\n      color: \"gray\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      placeholder: \"Your username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      content: this.state.usernameError,\n      messageType: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faLock,\n      size: \"2x\",\n      color: \"gray\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      id: \"password\",\n      placeholder: \"Your password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      content: this.state.passwordError,\n      messageType: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faEnvelope,\n      size: \"2x\",\n      color: \"gray\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"email\",\n      placeholder: \"Your email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      content: this.state.emailIdError,\n      messageType: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faPhone,\n      size: \"2x\",\n      color: \"gray\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"phone\",\n      placeholder: \"Your phone number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      content: this.state.phoneError,\n      messageType: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"terms\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), \" I read and agree to \", React.createElement(\"a\", {\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Terms and Conditions\"), React.createElement(ErrorMessage, {\n      content: this.state.termsError,\n      messageType: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"btn btn-primary getSatProSubmitBtn\",\n      value: \"Sign Up\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"formFooter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Already have an account? \", React.createElement(\"a\", {\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"Sign In\"), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default Registration;","map":{"version":3,"sources":["/Users/annuabraham/Documents/GitHub/ENPM613/client/src/components/registration/index.js"],"names":["React","Component","Fragment","Modal","FontAwesomeIcon","faUser","faLock","faEnvelope","faPhone","faUserCircle","ErrorMessage","Registration","constructor","props","handleChange","e","registrationInfo","state","target","name","value","setState","isTermsChecked","checked","handleSubmit","preventDefault","validateField","field","fname","lname","password","username","email","console","log","test","fnameError","lnameError","passwordError","usernameError","emailIdError","phone","phoneError","emailId","role_id","isFormValid","termsError","render","showModal","onCloseModal"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport Modal from \"react-responsive-modal\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser, faLock, faEnvelope, faPhone, faUserCircle } from '@fortawesome/free-solid-svg-icons';\nimport './registeration.css';\nimport ErrorMessage from \"../ErrorMessage\";\n\nclass Registration extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            registrationInfo: { fname: \"\", lname: \"\", username: \"\", password: \"\", emailId: \"\", phone: \"\", role_id: 1 },\n            fnameError: \"\",\n            lnameError: \"\",\n            usernameError: \"\",\n            passwordError: \"\",\n            emailIdError: \"\",\n            phoneError: \"\",\n            isFormValid: false,\n            isTermsChecked: false,\n            termsError: \"\"\n        }\n    }\n\n    handleChange = (e) => {\n        let registrationInfo = this.state.registrationInfo;\n        if (e.target.name !== \"terms\") {\n            registrationInfo[e.target.name] = e.target.value;\n            this.setState({ registrationInfo })\n        }\n        else {\n            this.setState({isTermsChecked: e.target.checked})\n        }\n    }\n\n    handleSubmit = (e) =>{\n        e.preventDefault();\n        this.validateField(\"fname\");\n        this.validateField(\"lname\");\n        this.validateField(\"password\");\n        this.validateField(\"username\");\n        this.validateField(\"email\");\n        this.validateField(\"phone\");\n    }\n\n    validateField = (field) =>{\n        \n        let fname = this.state.registrationInfo[\"fname\"];\n        let lname = this.state.registrationInfo[\"lname\"];\n        let password = this.state.registrationInfo[\"password\"];\n        let username = this.state.registrationInfo[\"username\"];\n        let email = this.state.registrationInfo[\"email\"];\n\n        console.log(\"Fname\", /^[a-zA-Z]+$/.test(fname));\n\n        //Validate Fname \n        //  this.setState({fnameError: fname === \"\"? \"Please enter your first name\": \"\"})\n        //  this.setState({ fnameError: (!/^[a-zA-Z]+$/.test(fname)? \"Please enter a valid first name\": \"\")})\n        //  this.setState({lnameError: lname === \"\" ? \"Please enter your lastname\": \"\"})\n\n         switch(field){\n             case \"fname\": {\n                 if(fname === \"\"){\n                     this.setState({fnameError: \"First name is required\"});\n                 }\n                 else {\n                     if(!/^[a-zA-Z]+$/.test(fname)){\n                     this.setState({fnameError: \"Please enter a valid first name\"});\n                     }\n                     else{\n                         this.setState({fnameError: \"\"});\n                     }\n                 }\n             } break;\n             case \"lname\": {\n                if(lname === \"\"){\n                    this.setState({lnameError: \"Last name is required\"});\n                }\n                else {\n                    if(!/^[a-zA-Z]+$/.test(lname)){\n                    this.setState({lnameError: \"Please enter a valid last name\"});\n                    }\n                    else{\n                        this.setState({lnameError: \"\"});\n                    }\n                }\n             } break;\n             case \"password\": {\n                if(password === \"\"){\n                    this.setState({passwordError: \"Password is required\"});\n                }\n             } break;\n             case \"username\":{\n                 if(username === \"\"){\n                     this.setState({usernameError: \"Username is required\"})\n                 }\n             } break;\n             case \"email\":{\n                if(email === \"\"){\n                    this.setState({emailIdError: \"Email id is required\"})\n                }\n             } break;\n             case \"phone\":{\n                 if(phone === \"\") {\n                     this.setState({phoneError: \"Phone number is required\"})\n                 }\n             }\n         }\n\n    }\n\n    render() {\n        console.log(\"Registration\", this.state);\n        return (\n            <Modal open={this.props.showModal} onClose={this.props.onCloseModal}>\n                <div className=\"RegistrationWrapper\">\n                    <br />\n                    <h3>Sign Up</h3>\n                    <hr />\n                    <form onSubmit={this.handleSubmit} onChange={this.handleChange}>\n                        <div className=\"form-group nameField\" >\n                            <FontAwesomeIcon icon={faUser} size=\"2x\" color=\"gray\" />\n                            <input type=\"text\" name=\"fname\"\n                                placeholder=\"Your First name\"\n                            />\n                            <input type=\"text\" name=\"lname\"\n                                placeholder=\"Your last name\"\n                            />\n                            <ErrorMessage content={this.state.fnameError} messageType=\"error\" />\n                            <ErrorMessage content={this.state.lnameError} messageType=\"error\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <FontAwesomeIcon icon={faUserCircle} size=\"2x\" color=\"gray\" />\n                            <input type=\"text\" name=\"username\"\n                                placeholder=\"Your username\"\n                            />\n                            <ErrorMessage content={this.state.usernameError} messageType=\"error\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <FontAwesomeIcon icon={faLock} size=\"2x\" color=\"gray\" />\n                            <input type=\"password\" name=\"password\"\n                                id=\"password\"\n                                placeholder=\"Your password\"\n                            />\n                            <ErrorMessage content={this.state.passwordError} messageType=\"error\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <FontAwesomeIcon icon={faEnvelope} size=\"2x\" color=\"gray\" />\n                            <input type=\"text\" name=\"email\"\n                                placeholder=\"Your email\"\n                            />\n                            <ErrorMessage content={this.state.emailIdError} messageType=\"error\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <FontAwesomeIcon icon={faPhone} size=\"2x\" color=\"gray\" />\n                            <input type=\"text\" name=\"phone\"\n                                placeholder=\"Your phone number\"\n                            />\n                            <ErrorMessage content={this.state.phoneError} messageType=\"error\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <input type=\"checkbox\" name=\"terms\"\n                            /> I read and agree to <a href=\"/\">Terms and Conditions</a>\n                            <ErrorMessage content={this.state.termsError} messageType=\"error\" />\n                        </div>\n                        <input type=\"submit\"\n                            className=\"btn btn-primary getSatProSubmitBtn\"\n                            value=\"Sign Up\"\n                        />\n                        <div className=\"formFooter\">\n                            Already have an account? <a href=\"#\">Sign In</a> <br />\n                        </div>\n                    </form>\n                </div>\n            </Modal>)\n    }\n}\nexport default Registration;"]},"metadata":{},"sourceType":"module"}