{"ast":null,"code":"var _jsxFileName = \"/Users/annuabraham/Documents/GitHub/ENPM613/client/src/components/discussions/createDiscussion.js\";\nimport React, { Component, Fragment } from 'react';\nimport ErrorMessage from \"../ErrorMessage\";\n\nclass CreateDiscussion extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      let discussion = this.state.discussion;\n      discussion[e.target.id] = e.target.value;\n      this.setState({\n        discussion: discussion\n      });\n    };\n\n    this.handleSubmit = e => {\n      //TODO: validation of input fields.\n      let discussion = this.state.discussion;\n      let isContentValid = this.validateField(discussion.content, \"content\");\n      let isHeaderValid = this.validateField(discussion.header, \"header\");\n      this.state.formValid ? console.log(\"FormValid\") : console.log(\"Form not valid\");\n    };\n\n    this.validateField = (fieldValue, fieldType) => {\n      let errors = this.state.errors;\n\n      if (fieldValue === \"\") {\n        errors[fieldType] = \"Discussion \".concat(fieldType, \" is required\");\n        this.setState({\n          errors: errors\n        });\n        return false;\n      } else {\n        errors[fieldType] = \"\";\n        this.setState({\n          errors: errors\n        });\n        return true;\n      }\n    };\n\n    this.state = {\n      discussion: {\n        content: \"\",\n        header: \"\"\n      },\n      errors: {\n        content: \"\",\n        header: \"\"\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"dashboard_body discussion_body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Start a Discussion\"), React.createElement(\"div\", {\n      className: \"NewDiscussionWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Discussion Heading\", React.createElement(\"input\", {\n      type: \"text\",\n      id: \"header\",\n      placeholder: \"Type Discussion heading here...\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      content: this.state.errors.header,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), \"Discussion Content\", React.createElement(\"textarea\", {\n      className: \"form-control\",\n      id: \"content\",\n      placeholder: \"Type Discussion Content here...\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      content: this.state.errors.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: this.handleSubmit //disabled = {!this.state.formValid}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nexport default CreateDiscussion;","map":{"version":3,"sources":["/Users/annuabraham/Documents/GitHub/ENPM613/client/src/components/discussions/createDiscussion.js"],"names":["React","Component","Fragment","ErrorMessage","CreateDiscussion","constructor","props","handleChange","e","discussion","state","target","id","value","setState","handleSubmit","isContentValid","validateField","content","isHeaderValid","header","formValid","console","log","fieldValue","fieldType","errors","render"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\n\nimport ErrorMessage from \"../ErrorMessage\";\n\nclass CreateDiscussion extends Component {\n    constructor(props){\n        super(props);\n        this.state ={\n            discussion: {content: \"\", header: \"\"},\n            errors: {content: \"\", header:\"\"},\n        }\n    }\n\n    handleChange = (e) =>{\n        let discussion = this.state.discussion;\n        discussion[e.target.id] = e.target.value;\n        this.setState({discussion: discussion});\n    }\n\n    handleSubmit = (e) =>{\n        //TODO: validation of input fields.\n        let discussion =  this.state.discussion;\n        let isContentValid = this.validateField(discussion.content, \"content\")\n        let isHeaderValid = this.validateField(discussion.header, \"header\")\n        this.state.formValid ? console.log(\"FormValid\") :console.log(\"Form not valid\")\n    }\n\n    validateField = (fieldValue, fieldType) =>{\n        let errors = this.state.errors;\n        if(fieldValue === \"\"){\n            errors[fieldType] = `Discussion ${fieldType} is required`;\n            this.setState({errors: errors})\n            return false\n        }\n        else{\n            errors[fieldType] = \"\";\n            this.setState({errors: errors})\n            return true;\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"dashboard_body discussion_body\">\n                <h3>Start a Discussion</h3>\n                <div className=\"NewDiscussionWrapper\">\n                    Discussion Heading\n                    <input\n                        type=\"text\"\n                        id=\"header\"\n                        placeholder=\"Type Discussion heading here...\"\n                        onChange= {this.handleChange}\n                    />\n                    <ErrorMessage content={this.state.errors.header} />\n                    <br />\n                    Discussion Content\n                    <textarea\n                        className=\"form-control\"\n                        id=\"content\"\n                        placeholder=\"Type Discussion Content here...\"\n                        onChange={this.handleChange}\n                    />\n                     <ErrorMessage content={this.state.errors.content} />\n                    <br />\n                    <button \n                        className=\"btn btn-success\"\n                        onClick={this.handleSubmit} \n                        //disabled = {!this.state.formValid}\n                        >\n                        Submit\n                    </button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CreateDiscussion"]},"metadata":{},"sourceType":"module"}