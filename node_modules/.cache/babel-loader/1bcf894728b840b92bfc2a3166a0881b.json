{"ast":null,"code":"import _defineProperty from \"/Users/annuabraham/Documents/GitHub/ENPM613/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as actionTypes from \"../actions/actionTypes\";\nconst initialState = {\n  selectedExam: {},\n  examList: {}\n};\n\nconst examReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.GET_EXAM_LIST_SUCCESS:\n      return _objectSpread({}, state, {\n        examList: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default examReducer;","map":{"version":3,"sources":["/Users/annuabraham/Documents/GitHub/ENPM613/client/src/reducers/examReducer.js"],"names":["actionTypes","initialState","selectedExam","examList","examReducer","state","action","type","GET_EXAM_LIST_SUCCESS","payload"],"mappings":";;;;;;AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,YAAY,EAAE,EADG;AAEjBC,EAAAA,QAAQ,EAAE;AAFO,CAArB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,WAAW,CAACQ,qBAAjB;AACI,+BAAUH,KAAV;AAAiBF,QAAAA,QAAQ,EAAEG,MAAM,CAACG;AAAlC;;AACJ;AACI,aAAOJ,KAAP;AAJR;AAMH,CAPD;;AASA,eAAeD,WAAf","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n    selectedExam: {},\n    examList: {},\n}\n\nconst examReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.GET_EXAM_LIST_SUCCESS: \n            return{...state, examList: action.payload}\n        default:\n            return state\n    }\n}\n\nexport default examReducer;"]},"metadata":{},"sourceType":"module"}