{"ast":null,"code":"var _jsxFileName = \"/Users/annuabraham/Documents/GitHub/ENPM613/client/src/components/discussions/createDiscussion.js\";\nimport React, { Component, Fragment } from 'react';\n\nclass CreateDiscussion extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      let discussion = this.state.discussion;\n      discussion[e.target.id] = e.target.value;\n      this.setState({\n        discussion: discussion\n      });\n    };\n\n    this.handleSubmit = e => {\n      //TODO: validation of input fields.\n      let discussion = this.state.discussion;\n      this.validateField(discussion.content, \"content\");\n      this.validateField(discussion.header, \"header\"); //this.state.formValid ? submit Form : error message\n    };\n\n    this.validateField = (fieldValue, fieldType) => {\n      let errors = this.state.errors;\n\n      if (fieldValue === \"\") {\n        errors[fieldType] = \"Discussion \".concat(fieldType, \" is required\");\n        this.setState({\n          errors: errors,\n          formValid: false\n        });\n      } else {\n        this.setState({\n          formValid: true\n        });\n      }\n    };\n\n    this.state = {\n      discussion: {\n        content: \"\",\n        header: \"\"\n      },\n      errors: {\n        content: \"\",\n        header: \"\"\n      },\n      formValid: false\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"dashboard_body discussion_body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Start a Discussion\"), React.createElement(\"div\", {\n      className: \"NewDiscussionWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Discussion Heading\", React.createElement(\"input\", {\n      type: \"text\",\n      id: \"header\",\n      placeholder: \"Type Discussion heading here...\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, this.state.errors.header), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), \"Discussion Content\", React.createElement(\"textarea\", {\n      className: \"form-control\",\n      id: \"content\",\n      placeholder: \"Type Discussion Content here...\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, this.state.errors.content), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: this.handleSubmit //disabled = {!this.state.formValid}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nexport default CreateDiscussion;","map":{"version":3,"sources":["/Users/annuabraham/Documents/GitHub/ENPM613/client/src/components/discussions/createDiscussion.js"],"names":["React","Component","Fragment","CreateDiscussion","constructor","props","handleChange","e","discussion","state","target","id","value","setState","handleSubmit","validateField","content","header","fieldValue","fieldType","errors","formValid","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,MAAMC,gBAAN,SAA+BF,SAA/B,CAAyC;AACrCG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SASlBC,YATkB,GASFC,CAAD,IAAM;AACjB,UAAIC,UAAU,GAAG,KAAKC,KAAL,CAAWD,UAA5B;AACAA,MAAAA,UAAU,CAACD,CAAC,CAACG,MAAF,CAASC,EAAV,CAAV,GAA0BJ,CAAC,CAACG,MAAF,CAASE,KAAnC;AACA,WAAKC,QAAL,CAAc;AAACL,QAAAA,UAAU,EAAEA;AAAb,OAAd;AACH,KAbiB;;AAAA,SAelBM,YAfkB,GAeFP,CAAD,IAAM;AACjB;AACA,UAAIC,UAAU,GAAI,KAAKC,KAAL,CAAWD,UAA7B;AACA,WAAKO,aAAL,CAAmBP,UAAU,CAACQ,OAA9B,EAAuC,SAAvC;AACA,WAAKD,aAAL,CAAmBP,UAAU,CAACS,MAA9B,EAAsC,QAAtC,EAJiB,CAKjB;AACH,KArBiB;;AAAA,SAuBlBF,aAvBkB,GAuBF,CAACG,UAAD,EAAaC,SAAb,KAA0B;AACtC,UAAIC,MAAM,GAAG,KAAKX,KAAL,CAAWW,MAAxB;;AACA,UAAGF,UAAU,KAAK,EAAlB,EAAqB;AACjBE,QAAAA,MAAM,CAACD,SAAD,CAAN,wBAAkCA,SAAlC;AACA,aAAKN,QAAL,CAAc;AAACO,UAAAA,MAAM,EAAEA,MAAT;AAAgBC,UAAAA,SAAS,EAAE;AAA3B,SAAd;AACH,OAHD,MAII;AACA,aAAKR,QAAL,CAAc;AAACQ,UAAAA,SAAS,EAAE;AAAZ,SAAd;AACH;AACJ,KAhCiB;;AAEd,SAAKZ,KAAL,GAAY;AACRD,MAAAA,UAAU,EAAE;AAACQ,QAAAA,OAAO,EAAE,EAAV;AAAcC,QAAAA,MAAM,EAAE;AAAtB,OADJ;AAERG,MAAAA,MAAM,EAAE;AAACJ,QAAAA,OAAO,EAAE,EAAV;AAAcC,QAAAA,MAAM,EAAC;AAArB,OAFA;AAGRI,MAAAA,SAAS,EAAE;AAHH,KAAZ;AAKH;;AA2BDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAEI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,EAAE,EAAC,QAFP;AAGI,MAAA,WAAW,EAAC,iCAHhB;AAII,MAAA,QAAQ,EAAG,KAAKhB,YAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAQI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+B,KAAKG,KAAL,CAAWW,MAAX,CAAkBH,MAAjD,CARJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,wBAYI;AACI,MAAA,SAAS,EAAC,cADd;AAEI,MAAA,EAAE,EAAC,SAFP;AAGI,MAAA,WAAW,EAAC,iCAHhB;AAII,MAAA,QAAQ,EAAE,KAAKX,YAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZJ,EAkBI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+B,KAAKG,KAAL,CAAWW,MAAX,CAAkBJ,OAAjD,CAlBJ,EAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBJ,EAoBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBJ,EAqBI;AACI,MAAA,SAAS,EAAC,iBADd;AAEI,MAAA,OAAO,EAAE,KAAKF,YAFlB,CAGI;AAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBArBJ,CAFJ,CADJ;AAkCH;;AAtEoC;;AAyEzC,eAAeX,gBAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\n\nclass CreateDiscussion extends Component {\n    constructor(props){\n        super(props);\n        this.state ={\n            discussion: {content: \"\", header: \"\"},\n            errors: {content: \"\", header:\"\"},\n            formValid: false\n        }\n    }\n\n    handleChange = (e) =>{\n        let discussion = this.state.discussion;\n        discussion[e.target.id] = e.target.value;\n        this.setState({discussion: discussion});\n    }\n\n    handleSubmit = (e) =>{\n        //TODO: validation of input fields.\n        let discussion =  this.state.discussion;\n        this.validateField(discussion.content, \"content\");\n        this.validateField(discussion.header, \"header\");\n        //this.state.formValid ? submit Form : error message\n    }\n\n    validateField = (fieldValue, fieldType) =>{\n        let errors = this.state.errors;\n        if(fieldValue === \"\"){\n            errors[fieldType] = `Discussion ${fieldType} is required`;\n            this.setState({errors: errors,formValid: false});\n        }\n        else{\n            this.setState({formValid: true})\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"dashboard_body discussion_body\">\n                <h3>Start a Discussion</h3>\n                <div className=\"NewDiscussionWrapper\">\n                    Discussion Heading\n                    <input\n                        type=\"text\"\n                        id=\"header\"\n                        placeholder=\"Type Discussion heading here...\"\n                        onChange= {this.handleChange}\n                    />\n                    <div className=\"errorMessage\">{this.state.errors.header}</div>\n                    <br />\n                    <br />\n                    Discussion Content\n                    <textarea\n                        className=\"form-control\"\n                        id=\"content\"\n                        placeholder=\"Type Discussion Content here...\"\n                        onChange={this.handleChange}\n                    />\n                    <div className=\"errorMessage\">{this.state.errors.content}</div>\n                    <br />\n                    <br />\n                    <button \n                        className=\"btn btn-success\"\n                        onClick={this.handleSubmit} \n                        //disabled = {!this.state.formValid}\n                        >\n                        Submit\n                    </button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CreateDiscussion"]},"metadata":{},"sourceType":"module"}