{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nexports.default = catchErrors;\nvar ERROR = '@@remotedev/ERROR';\n\nfunction catchErrors(sendError) {\n  if ((typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object' && _typeof(window.onerror) === 'object') {\n    window.onerror = function (message, url, lineNo, columnNo, error) {\n      var errorAction = {\n        type: ERROR,\n        message: message,\n        url: url,\n        lineNo: lineNo,\n        columnNo: columnNo\n      };\n      if (error && error.stack) errorAction.stack = error.stack;\n      sendError(errorAction);\n      return false;\n    };\n  } else if (typeof global !== 'undefined' && global.ErrorUtils) {\n    global.ErrorUtils.setGlobalHandler(function (error, isFatal) {\n      sendError({\n        type: ERROR,\n        error: error,\n        isFatal: isFatal\n      });\n    });\n  }\n\n  if ((typeof console === 'undefined' ? 'undefined' : _typeof(console)) === 'object' && typeof console.error === 'function' && !console.beforeRemotedev) {\n    console.beforeRemotedev = console.error.bind(console);\n\n    console.error = function () {\n      var errorAction = {\n        type: ERROR\n      };\n      var error = arguments[0];\n      errorAction.message = error.message ? error.message : error;\n\n      if (error.sourceURL) {\n        errorAction = _extends({}, errorAction, {\n          sourceURL: error.sourceURL,\n          line: error.line,\n          column: error.column\n        });\n      }\n\n      if (error.stack) errorAction.stack = error.stack;\n      sendError(errorAction);\n      console.beforeRemotedev.apply(null, arguments);\n    };\n  }\n}","map":null,"metadata":{},"sourceType":"script"}