{"ast":null,"code":"var _jsxFileName = \"/Users/annuabraham/Documents/GitHub/ENPM613/client/src/components/modal/index.js\";\nimport React, { Component } from 'react';\nimport Modal from \"react-responsive-modal\";\nimport 'react-dropzone-uploader/dist/styles.css';\nimport Dropzone from 'react-dropzone-uploader';\nimport \"./modal.css\";\n\nconst FileUploader = props => {\n  // specify upload params and url for your files\n  const getUploadParams = ({\n    meta\n  }) => {\n    return {\n      url: 'https://httpbin.org/post'\n    };\n  }; // called every time a file's `status` changes\n\n\n  const handleChangeStatus = ({\n    meta,\n    file\n  }, status) => {\n    console.log(status, meta, file);\n  }; // receives array of files that are done uploading when submit button is clicked\n\n\n  const handleSubmit = (files, allFiles) => {\n    console.log(files.map(f => f.meta));\n    allFiles.forEach(f => f.remove());\n    props.onCloseModal();\n  };\n\n  return React.createElement(Dropzone, {\n    getUploadParams: getUploadParams,\n    onChangeStatus: handleChangeStatus,\n    maxFiles: 3,\n    accept: \".docx\",\n    maxSizeBytes: 3145728,\n    inputWithFilesContent: files => \"\".concat(3 - files.length, \" more\"),\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  });\n};\n\nclass FileUploadModal extends Component {\n  render() {\n    return React.createElement(Modal, {\n      open: this.props.isVisible,\n      onClose: this.props.onCloseModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Upload Files\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(FileUploader, {\n      onCloseModal: this.props.onCloseModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default FileUploadModal;","map":{"version":3,"sources":["/Users/annuabraham/Documents/GitHub/ENPM613/client/src/components/modal/index.js"],"names":["React","Component","Modal","Dropzone","FileUploader","props","getUploadParams","meta","url","handleChangeStatus","file","status","console","log","handleSubmit","files","allFiles","map","f","forEach","remove","onCloseModal","length","FileUploadModal","render","isVisible"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAO,yCAAP;AACA,OAAOC,QAAP,MAAqB,yBAArB;AAEA,OAAO,aAAP;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAU;AAC3B;AACA,QAAMC,eAAe,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAc;AAAE,WAAO;AAAEC,MAAAA,GAAG,EAAE;AAAP,KAAP;AAA4C,GAApF,CAF2B,CAI3B;;;AACA,QAAMC,kBAAkB,GAAG,CAAC;AAAEF,IAAAA,IAAF;AAAQG,IAAAA;AAAR,GAAD,EAAiBC,MAAjB,KAA4B;AAAEC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,EAAoBJ,IAApB,EAA0BG,IAA1B;AAAiC,GAA1F,CAL2B,CAO3B;;;AACA,QAAMI,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACtCJ,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAK,CAACE,GAAN,CAAUC,CAAC,IAAIA,CAAC,CAACX,IAAjB,CAAZ;AACAS,IAAAA,QAAQ,CAACG,OAAT,CAAiBD,CAAC,IAAIA,CAAC,CAACE,MAAF,EAAtB;AACAf,IAAAA,KAAK,CAACgB,YAAN;AACH,GAJD;;AAMA,SACI,oBAAC,QAAD;AACA,IAAA,eAAe,EAAEf,eADjB;AAEA,IAAA,cAAc,EAAEG,kBAFhB;AAGA,IAAA,QAAQ,EAAE,CAHV;AAIA,IAAA,MAAM,EAAC,OAJP;AAKA,IAAA,YAAY,EAAE,OALd;AAMA,IAAA,qBAAqB,EAAEM,KAAK,cAAO,IAAIA,KAAK,CAACO,MAAjB,UAN5B;AAOA,IAAA,QAAQ,EAAER,YAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAWH,CAzBD;;AA2BA,MAAMS,eAAN,SAA8BtB,SAA9B,CAAwC;AACpCuB,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,KAAKnB,KAAL,CAAWoB,SAAxB;AAAmC,MAAA,OAAO,EAAE,KAAKpB,KAAL,CAAWgB,YAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,YAAD;AAAc,MAAA,YAAY,EAAE,KAAKhB,KAAL,CAAWgB,YAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ;AAMH;;AARmC;;AAUxC,eAAeE,eAAf","sourcesContent":["import React, { Component } from 'react';\nimport Modal from \"react-responsive-modal\";\nimport 'react-dropzone-uploader/dist/styles.css'\nimport Dropzone from 'react-dropzone-uploader';\n\nimport \"./modal.css\";\n\nconst FileUploader = (props) =>{\n    // specify upload params and url for your files\n    const getUploadParams = ({ meta }) => { return { url: 'https://httpbin.org/post' } }\n    \n    // called every time a file's `status` changes\n    const handleChangeStatus = ({ meta, file }, status) => { console.log(status, meta, file) }\n    \n    // receives array of files that are done uploading when submit button is clicked\n    const handleSubmit = (files, allFiles) => {\n        console.log(files.map(f => f.meta))\n        allFiles.forEach(f => f.remove())\n        props.onCloseModal()\n    }\n\n    return (\n        <Dropzone\n        getUploadParams={getUploadParams}\n        onChangeStatus={handleChangeStatus}\n        maxFiles={3}\n        accept=\".docx\"\n        maxSizeBytes={3145728}\n        inputWithFilesContent={files => `${3 - files.length} more`}\n        onSubmit={handleSubmit}\n        />\n    )\n} \n\nclass FileUploadModal extends Component {\n    render() {\n        return (\n            <Modal open={this.props.isVisible} onClose={this.props.onCloseModal}>\n                <h2>Upload Files</h2>\n                <hr />\n                <FileUploader onCloseModal={this.props.onCloseModal}/>\n            </Modal>)\n    }\n}\nexport default FileUploadModal;"]},"metadata":{},"sourceType":"module"}