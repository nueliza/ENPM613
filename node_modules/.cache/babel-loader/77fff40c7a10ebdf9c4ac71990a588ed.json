{"ast":null,"code":"var _jsxFileName = \"/Users/annuabraham/Documents/GitHub/ENPM613/client/src/containers/modules.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Modules from '../components/modules';\nimport AdminDashboard from '../components/AdminDashboard';\nimport { Redirect } from 'react-router-dom';\nimport { setSelectedModule } from \"../actions\";\nimport { logoutUser } from \"../actions/userHandler\";\nimport { getFlashcardSets } from \"../actions/dashboardActions\";\nimport { getStudentList } from \"../actions/studentHandler\";\nimport Loading from \"../components/loading\";\n\nclass ModuleContainer extends Component {\n  render() {\n    console.log(\"UserInfo\", this.props.userInfo);\n\n    if (this.props.userInfo.user_type === \"Student\") {\n      return React.createElement(Modules, {\n        userInfo: this.props.userInfo,\n        setSelectedModule: this.props.setSelectedModule,\n        logoutUser: this.props.logoutUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      });\n    } else if (this.props.userInfo.user_type === \"Tutor\") {\n      React.createElement(Redirect, {\n        to: {\n          pathname: '/dashboard'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      });\n    } else if (this.props.userInfo.user_type === \"Admin\") {\n      return React.createElement(AdminDashboard, {\n        userInfo: this.props.userInfo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      });\n    } else return React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  userInfo: state.user.userInfo,\n  loading: state.loader.loading\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setSelectedModule: modules => dispatch(setSelectedModule(modules)),\n    getFlashcardSets: payload => dispatch(getFlashcardSets(payload)),\n    logoutUser: () => dispatch(logoutUser())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModuleContainer);","map":{"version":3,"sources":["/Users/annuabraham/Documents/GitHub/ENPM613/client/src/containers/modules.js"],"names":["React","Component","connect","Modules","AdminDashboard","Redirect","setSelectedModule","logoutUser","getFlashcardSets","getStudentList","Loading","ModuleContainer","render","console","log","props","userInfo","user_type","pathname","mapStateToProps","state","user","loading","loader","mapDispatchToProps","dispatch","modules","payload"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,SAASC,iBAAT,QAAiC,YAAjC;AACA,SAAUC,UAAV,QAA4B,wBAA5B;AACA,SAASC,gBAAT,QAAiC,6BAAjC;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AAEA,MAAMC,eAAN,SAA8BV,SAA9B,CAAwC;AACtCW,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB,KAAKC,KAAL,CAAWC,QAAnC;;AACA,QAAI,KAAKD,KAAL,CAAWC,QAAX,CAAoBC,SAApB,KAAkC,SAAtC,EAAiD;AAC/C,aAAO,oBAAC,OAAD;AACL,QAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWC,QADhB;AAEL,QAAA,iBAAiB,EAAE,KAAKD,KAAL,CAAWT,iBAFzB;AAGL,QAAA,UAAU,EAAE,KAAKS,KAAL,CAAWR,UAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAKD,KAND,MAOK,IAAI,KAAKQ,KAAL,CAAWC,QAAX,CAAoBC,SAApB,KAAkC,OAAtC,EAA+C;AAClD,0BAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AACZC,UAAAA,QAAQ,EAAE;AADE,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGD,KAJI,MAKA,IAAI,KAAKH,KAAL,CAAWC,QAAX,CAAoBC,SAApB,KAAkC,OAAtC,EAA+C;AAClD,aAAO,oBAAC,cAAD;AAAgB,QAAA,QAAQ,EAAI,KAAKF,KAAL,CAAWC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFI,MAIH,OAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AApBqC;;AAsBxC,MAAMG,eAAe,GAAGC,KAAK,KAAK;AAChCJ,EAAAA,QAAQ,EAAEI,KAAK,CAACC,IAAN,CAAWL,QADW;AAEhCM,EAAAA,OAAO,EAAEF,KAAK,CAACG,MAAN,CAAaD;AAFU,CAAL,CAA7B;;AAKA,MAAME,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLnB,IAAAA,iBAAiB,EAAGoB,OAAD,IAAaD,QAAQ,CAACnB,iBAAiB,CAACoB,OAAD,CAAlB,CADnC;AAELlB,IAAAA,gBAAgB,EAAGmB,OAAD,IAAaF,QAAQ,CAACjB,gBAAgB,CAACmB,OAAD,CAAjB,CAFlC;AAGLpB,IAAAA,UAAU,EAAE,MAAMkB,QAAQ,CAAClB,UAAU,EAAX;AAHrB,GAAP;AAKD,CAND;;AAQA,eAAeL,OAAO,CAACiB,eAAD,EAAkBK,kBAAlB,CAAP,CAA6Cb,eAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Modules from '../components/modules';\nimport AdminDashboard from '../components/AdminDashboard';\nimport { Redirect } from 'react-router-dom';\n\nimport { setSelectedModule} from \"../actions\";\nimport {  logoutUser } from \"../actions/userHandler\";\nimport { getFlashcardSets } from \"../actions/dashboardActions\";\nimport { getStudentList } from \"../actions/studentHandler\";\nimport Loading from \"../components/loading\";\n\nclass ModuleContainer extends Component {\n  render() {\n    console.log(\"UserInfo\", this.props.userInfo)\n    if (this.props.userInfo.user_type === \"Student\") {\n      return <Modules\n        userInfo={this.props.userInfo}\n        setSelectedModule={this.props.setSelectedModule}\n        logoutUser={this.props.logoutUser}\n      />\n    }\n    else if (this.props.userInfo.user_type === \"Tutor\") {\n      <Redirect to={{\n        pathname: '/dashboard'\n      }} />\n    }\n    else if (this.props.userInfo.user_type === \"Admin\") {\n      return <AdminDashboard userInfo = {this.props.userInfo} /> \n    }\n    else\n      return <Redirect to =\"/\" />\n  }\n}\nconst mapStateToProps = state => ({\n  userInfo: state.user.userInfo,\n  loading: state.loader.loading\n})\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setSelectedModule: (modules) => dispatch(setSelectedModule(modules)),\n    getFlashcardSets: (payload) => dispatch(getFlashcardSets(payload)),\n    logoutUser: () => dispatch(logoutUser()),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModuleContainer)"]},"metadata":{},"sourceType":"module"}