{"ast":null,"code":"var _jsxFileName = \"/Users/annuabraham/Documents/GitHub/ENPM613/client/src/containers/modules.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Modules from '../components/modules';\nimport AdminDashboard from '../components/AdminDashboard';\nimport { Redirect } from 'react-router-dom';\nimport Loading from '../components/loading';\nimport { setSelectedModule, logoutUser } from \"../actions/userActions\";\nimport { getFlashcardSets } from \"../actions/dashboardActions\";\nimport { resetToast } from \"../actions/actions\";\n\nclass ModuleContainer extends Component {\n  render() {\n    if (this.props.userInfo.user_type === \"Student\") {\n      return React.createElement(Modules, {\n        userInfo: this.props.userInfo,\n        setSelectedModule: this.props.setSelectedModule,\n        logoutUser: this.props.logoutUser,\n        toastMessage: this.props.toastMessage,\n        resetToast: this.props.resetToast,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      });\n    } else if (this.props.userInfo.user_type === \"Tutor\") {\n      return React.createElement(Redirect, {\n        to: {\n          pathname: '/dashboard'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      });\n    } else if (this.props.userInfo.user_type === \"Admin\") {\n      return React.createElement(AdminDashboard, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      });\n    } else return React.createElement(Loading, {\n      show: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  userInfo: state.user.userInfo,\n  toastMessage: state.toast.toastMessage\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setSelectedModule: modules => dispatch(setSelectedModule(modules)),\n    getFlashcardSets: payload => dispatch(getFlashcardSets(payload)),\n    logoutUser: () => dispatch(logoutUser()),\n    resetToast: () => dispatch(resetToast())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModuleContainer);","map":{"version":3,"sources":["/Users/annuabraham/Documents/GitHub/ENPM613/client/src/containers/modules.js"],"names":["React","Component","connect","Modules","AdminDashboard","Redirect","Loading","setSelectedModule","logoutUser","getFlashcardSets","resetToast","ModuleContainer","render","props","userInfo","user_type","toastMessage","pathname","mapStateToProps","state","user","toast","mapDispatchToProps","dispatch","modules","payload"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AAEA,SAASC,iBAAT,EAA4BC,UAA5B,QAA8C,wBAA9C;AACA,SAASC,gBAAT,QAAiC,6BAAjC;AACA,SAASC,UAAT,QAA2B,oBAA3B;;AAEA,MAAMC,eAAN,SAA8BV,SAA9B,CAAwC;AACtCW,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,SAApB,KAAkC,SAAtC,EAAiD;AAC/C,aAAO,oBAAC,OAAD;AACL,QAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWC,QADhB;AAEL,QAAA,iBAAiB,EAAE,KAAKD,KAAL,CAAWN,iBAFzB;AAGL,QAAA,UAAU,EAAE,KAAKM,KAAL,CAAWL,UAHlB;AAIL,QAAA,YAAY,EAAE,KAAKK,KAAL,CAAWG,YAJpB;AAKL,QAAA,UAAU,EAAE,KAAKH,KAAL,CAAWH,UALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAOD,KARD,MASK,IAAI,KAAKG,KAAL,CAAWC,QAAX,CAAoBC,SAApB,KAAkC,OAAtC,EAA+C;AAClD,aAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AACnBE,UAAAA,QAAQ,EAAE;AADS,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAGD,KAJI,MAKA,IAAI,KAAKJ,KAAL,CAAWC,QAAX,CAAoBC,SAApB,KAAkC,OAAtC,EAA+C;AAClD,aAAO,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFI,MAIH,OAAO,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAE,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AArBqC;;AAuBxC,MAAMG,eAAe,GAAGC,KAAK,KAAK;AAChCL,EAAAA,QAAQ,EAAEK,KAAK,CAACC,IAAN,CAAWN,QADW;AAEhCE,EAAAA,YAAY,EAAEG,KAAK,CAACE,KAAN,CAAYL;AAFM,CAAL,CAA7B;;AAKA,MAAMM,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLhB,IAAAA,iBAAiB,EAAGiB,OAAD,IAAaD,QAAQ,CAAChB,iBAAiB,CAACiB,OAAD,CAAlB,CADnC;AAELf,IAAAA,gBAAgB,EAAGgB,OAAD,IAAaF,QAAQ,CAACd,gBAAgB,CAACgB,OAAD,CAAjB,CAFlC;AAGLjB,IAAAA,UAAU,EAAE,MAAMe,QAAQ,CAACf,UAAU,EAAX,CAHrB;AAILE,IAAAA,UAAU,EAAE,MAAMa,QAAQ,CAACb,UAAU,EAAX;AAJrB,GAAP;AAMD,CAPD;;AASA,eAAeR,OAAO,CAACgB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CX,eAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Modules from '../components/modules';\nimport AdminDashboard from '../components/AdminDashboard';\nimport { Redirect } from 'react-router-dom';\nimport Loading from '../components/loading';\n\nimport { setSelectedModule, logoutUser } from \"../actions/userActions\";\nimport { getFlashcardSets } from \"../actions/dashboardActions\";\nimport { resetToast } from \"../actions/actions\";\n\nclass ModuleContainer extends Component {\n  render() {\n    if (this.props.userInfo.user_type === \"Student\") {\n      return <Modules\n        userInfo={this.props.userInfo}\n        setSelectedModule={this.props.setSelectedModule}\n        logoutUser={this.props.logoutUser}\n        toastMessage={this.props.toastMessage}\n        resetToast={this.props.resetToast}\n      />\n    }\n    else if (this.props.userInfo.user_type === \"Tutor\") {\n      return <Redirect to={{\n        pathname: '/dashboard'\n      }} />\n    }\n    else if (this.props.userInfo.user_type === \"Admin\") {\n      return <AdminDashboard />\n    }\n    else\n      return <Loading show={true} />\n  }\n}\nconst mapStateToProps = state => ({\n  userInfo: state.user.userInfo,\n  toastMessage: state.toast.toastMessage\n})\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setSelectedModule: (modules) => dispatch(setSelectedModule(modules)),\n    getFlashcardSets: (payload) => dispatch(getFlashcardSets(payload)),\n    logoutUser: () => dispatch(logoutUser()),\n    resetToast: () => dispatch(resetToast())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModuleContainer)"]},"metadata":{},"sourceType":"module"}