{"ast":null,"code":"import _defineProperty from \"/Users/annuabraham/Documents/GitHub/ENPM613/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as actionTypes from \"../actions/actionTypes\";\nconst initialState = {\n  toastMessage: \"\",\n  toastType: \"\"\n};\n\nconst toastReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.LOGIN_USER_SUCESS:\n      return _objectSpread({}, state, {\n        toastMessage: \"User Successfully Logged In\",\n        toastType: \"SUCCESS\"\n      });\n\n    case actionTypes.REGISTRATION_SUCCESS:\n    case actionTypes.LOGOUT_USER_SUCESS:\n    case actionTypes.CREATE_EXAM_SUCCESS:\n      return _objectSpread({}, state, {\n        toastMessage: action.payload,\n        toastType: \"SUCCESS\"\n      });\n\n    case actionTypes.GET_EXAM_LIST_FAILED:\n      return _objectSpread({}, state, {\n        toastMessage: action.error,\n        toastType: \"FAILURE\"\n      });\n\n    case actionTypes.RESET_TOAST:\n      return _objectSpread({}, state, {\n        toastMessage: \"\",\n        toastType: \"\"\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default toastReducer;","map":{"version":3,"sources":["/Users/annuabraham/Documents/GitHub/ENPM613/client/src/reducers/toastReducer.js"],"names":["actionTypes","initialState","toastMessage","toastType","toastReducer","state","action","type","LOGIN_USER_SUCESS","REGISTRATION_SUCCESS","LOGOUT_USER_SUCESS","CREATE_EXAM_SUCCESS","payload","GET_EXAM_LIST_FAILED","error","RESET_TOAST"],"mappings":";;;;;;AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,YAAY,EAAE,EADG;AAEjBC,EAAAA,SAAS,EAAE;AAFM,CAArB;;AAKA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,WAAW,CAACQ,iBAAjB;AACI,+BAAWH,KAAX;AAAkBH,QAAAA,YAAY,EAAE,6BAAhC;AAA+DC,QAAAA,SAAS,EAAC;AAAzE;;AAEJ,SAAKH,WAAW,CAACS,oBAAjB;AACA,SAAKT,WAAW,CAACU,kBAAjB;AACA,SAAKV,WAAW,CAACW,mBAAjB;AACI,+BAAUN,KAAV;AAAiBH,QAAAA,YAAY,EAAEI,MAAM,CAACM,OAAtC;AAA+CT,QAAAA,SAAS,EAAE;AAA1D;;AAEJ,SAAKH,WAAW,CAACa,oBAAjB;AACI,+BAAUR,KAAV;AAAiBH,QAAAA,YAAY,EAAEI,MAAM,CAACQ,KAAtC;AAA6CX,QAAAA,SAAS,EAAE;AAAxD;;AAEJ,SAAKH,WAAW,CAACe,WAAjB;AACI,+BAAWV,KAAX;AAAkBH,QAAAA,YAAY,EAAE,EAAhC;AAAoCC,QAAAA,SAAS,EAAE;AAA/C;;AACJ;AACI,aAAOE,KAAP;AAfR;AAiBH,CAlBD;;AAoBA,eAAeD,YAAf","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n    toastMessage: \"\",\n    toastType: \"\"\n}\n\nconst toastReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.LOGIN_USER_SUCESS:\n            return{ ...state, toastMessage: \"User Successfully Logged In\", toastType:\"SUCCESS\"}\n\n        case actionTypes.REGISTRATION_SUCCESS:\n        case actionTypes.LOGOUT_USER_SUCESS:\n        case actionTypes.CREATE_EXAM_SUCCESS:\n            return{...state, toastMessage: action.payload, toastType: \"SUCCESS\"}\n\n        case actionTypes.GET_EXAM_LIST_FAILED:\n            return{...state, toastMessage: action.error, toastType: \"FAILURE\"}\n        \n        case actionTypes.RESET_TOAST: \n            return{ ...state, toastMessage: \"\", toastType: \"\"}\n        default:\n            return state\n    }\n}\n\nexport default toastReducer;"]},"metadata":{},"sourceType":"module"}