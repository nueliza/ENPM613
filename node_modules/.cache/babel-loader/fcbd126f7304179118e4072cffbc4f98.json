{"ast":null,"code":"var _jsxFileName = \"/Users/annuabraham/Documents/GitHub/ENPM613/client/src/components/toast/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Toast, ToastBody } from 'reactstrap';\nimport { resetToast } from \"../../actions\";\n\nclass ToastContainer extends Component {\n  render() {\n    setTimeout(function () {\n      this.props.resetToast();\n    }.bind(this), 500000);\n    return this.props.toastMessage !== \"\" ? React.createElement(Toast, {\n      isOpen: this.props.showToast,\n      className: this.props.toastType !== \"SUCCESS\" ? \" success \" : \" failure \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(ToastBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, this.props.toastMessage)) : \"\";\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    resetToast: () => dispatch(resetToast())\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    toastMessage: state.toast.toastMessage,\n    toastType: state.toast.toastType\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ToastContainer);","map":{"version":3,"sources":["/Users/annuabraham/Documents/GitHub/ENPM613/client/src/components/toast/index.js"],"names":["React","Component","connect","Toast","ToastBody","resetToast","ToastContainer","render","setTimeout","props","bind","toastMessage","showToast","toastType","mapDispatchToProps","dispatch","mapStateToProps","state","toast"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,SAASC,UAAT,QAA2B,eAA3B;;AAEA,MAAMC,cAAN,SAA6BL,SAA7B,CAAuC;AACnCM,EAAAA,MAAM,GAAG;AACLC,IAAAA,UAAU,CAAC,YAAU;AAAE,WAAKC,KAAL,CAAWJ,UAAX;AAAyB,KAArC,CAAsCK,IAAtC,CAA2C,IAA3C,CAAD,EAAkD,MAAlD,CAAV;AACA,WACI,KAAKD,KAAL,CAAWE,YAAX,KAA4B,EAA5B,GACA,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAE,KAAKF,KAAL,CAAWG,SAA1B;AAAqC,MAAA,SAAS,EAAE,KAAKH,KAAL,CAAWI,SAAX,KAAyB,SAAzB,GAAoC,WAApC,GAAkD,WAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKJ,KAAL,CAAWE,YADhB,CADJ,CADA,GAMC,EAPL;AASH;;AAZkC;;AAcvC,MAAMG,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAM;AACFV,IAAAA,UAAU,EAAE,MAAMU,QAAQ,CAACV,UAAU,EAAX;AADxB,GAAN;AAGH,CAJD;;AAMA,MAAMW,eAAe,GAAIC,KAAF,IAAW;AAC9B,SAAM;AACFN,IAAAA,YAAY,EAAEM,KAAK,CAACC,KAAN,CAAYP,YADxB;AAEFE,IAAAA,SAAS,EAAEI,KAAK,CAACC,KAAN,CAAYL;AAFrB,GAAN;AAIH,CALD;;AAOA,eAAeX,OAAO,CAAEc,eAAF,EAAmBF,kBAAnB,CAAP,CAA8CR,cAA9C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Toast, ToastBody } from 'reactstrap';\nimport { resetToast } from \"../../actions\";\n\nclass ToastContainer extends Component {\n    render() {\n        setTimeout(function(){ this.props.resetToast();}.bind(this),500000);\n        return (\n            this.props.toastMessage !== \"\"?\n            <Toast isOpen={this.props.showToast} className={this.props.toastType !== \"SUCCESS\"? \" success \" : \" failure \"}>\n                <ToastBody>\n                    {this.props.toastMessage}\n                </ToastBody>\n            </Toast>\n            :\"\"\n        )\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        resetToast: () => dispatch(resetToast())\n    }\n}\n\nconst mapStateToProps =( state) =>{\n    return{\n        toastMessage: state.toast.toastMessage,\n        toastType: state.toast.toastType\n    }\n}\n    \nexport default connect( mapStateToProps, mapDispatchToProps)(ToastContainer)"]},"metadata":{},"sourceType":"module"}