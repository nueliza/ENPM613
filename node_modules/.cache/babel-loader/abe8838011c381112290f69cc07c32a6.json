{"ast":null,"code":"var _jsxFileName = \"/Users/annuabraham/Documents/GitHub/ENPM613/src/components/exams/index.js\";\nimport React, { Component } from 'react';\nimport { iconMapping } from \"../utils/iconsMapping.js\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { withRouter } from 'react-router-dom';\nimport ToastContainer from \"../toast\";\nimport Loading from \"../loading\";\nimport NotFound from \"../NotFound\";\n\nconst ExamList = props => {\n  return React.createElement(\"ul\", {\n    className: \"list-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, props.examList.map((exam, idx) => {\n    return React.createElement(\"li\", {\n      className: \"list-group-item\",\n      id: exam.exam_id,\n      key: idx,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \" \", exam.exam_name, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-info \" + props.isTutor ? \"hide\" : \"\",\n      onClick: () => {\n        props.history.push({\n          pathname: '/takeExam'\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"Take Exam\"), React.createElement(FontAwesomeIcon, {\n      icon: iconMapping[\"Trash\"],\n      size: \"1x\",\n      className: props.isTutor ? \"\" : \"hide\",\n      style: {\n        color: \"var(--alert-color)\",\n        float: \"right\"\n      },\n      onClick: () => props.handleDelete(exam.exam_id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"exam_details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, exam.ques_no, \" Questions\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Posted On: \", exam.published)));\n  }));\n};\n\nclass Exams extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleDelete = exam_id => {\n      let reqObject = {\n        \"model_name\": \"exam\",\n        \"model_id\": exam_id\n      };\n      this.props.deleteExam(reqObject);\n    };\n  }\n\n  UNSAFE_componentWillMount() {\n    if (this.props.isTutor) this.props.getExamListTutor();\n  }\n\n  render() {\n    const isTutor = this.props.isTutor;\n    if (this.props.loading) return React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }); //redirects to Not found page if the getExamsList API fails\n\n    return Object.keys(this.props.examList).length === 0 ? React.createElement(NotFound, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      className: \"dashboard_body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dashboard_subSection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"quoteWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: iconMapping[\"QuoteLeft\"],\n      size: \"2x\",\n      style: {\n        color: \"gray\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), \"\\xA0\", React.createElement(\"span\", {\n      className: \"quoteContent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Believe you can & you're halfway there \"), React.createElement(\"span\", {\n      className: \"author\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"- T Roosevelt\")), React.createElement(ToastContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(ExamList, Object.assign({}, this.props, {\n      isTutor: isTutor,\n      handleDelete: this.handleDelete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), isTutor ? React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-info getSatProSecondaryButton\",\n      onClick: () => {\n        this.props.history.push({\n          pathname: '/CreateExam'\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: iconMapping[\"Plus\"],\n      size: \"1x\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), \"\\xA0\", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Add Exam\")) : ''));\n  }\n\n}\n\nexport default withRouter(Exams);","map":{"version":3,"sources":["/Users/annuabraham/Documents/GitHub/ENPM613/src/components/exams/index.js"],"names":["React","Component","iconMapping","FontAwesomeIcon","withRouter","ToastContainer","Loading","NotFound","ExamList","props","examList","map","exam","idx","exam_id","exam_name","isTutor","history","push","pathname","color","float","handleDelete","ques_no","published","Exams","reqObject","deleteExam","UNSAFE_componentWillMount","getExamListTutor","render","loading","Object","keys","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { iconMapping } from \"../utils/iconsMapping.js\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { withRouter } from 'react-router-dom';\nimport ToastContainer from \"../toast\";\nimport Loading from \"../loading\";\nimport NotFound from \"../NotFound\";\n\nconst ExamList = (props) => {\n    return (\n        <ul className=\"list-group\">\n            {props.examList.map((exam, idx) =>{\n                return(\n                    <li className=\"list-group-item\" id={exam.exam_id} key={idx}> {exam.exam_name}\n                        <button \n                            type=\"button\" \n                            className={\"btn btn-info \" + props.isTutor? \"hide\":\"\"}\n                            onClick={() => {\n                                props.history.push({\n                                    pathname: '/takeExam',\n                                })\n                            }}\n                        >\n                            Take Exam\n                        </button>\n                        <FontAwesomeIcon \n                            icon={iconMapping[\"Trash\"]} \n                            size=\"1x\" \n                            className={props.isTutor?\"\": \"hide\"}\n                            style={{color: \"var(--alert-color)\", float: \"right\"}}\n                            onClick={()=>props.handleDelete(exam.exam_id)}\n                        />\n                        <div className=\"exam_details\">\n                            <span>{exam.ques_no} Questions</span>\n                        <span>Posted On: {exam.published}</span>\n                        </div>\n                    </li>\n                )\n            })}\n        </ul>\n    )\n}\n\nclass Exams extends Component {\n\n    UNSAFE_componentWillMount(){\n        if(this.props.isTutor)\n            this.props.getExamListTutor()\n    }\n\n    handleDelete =(exam_id) =>{\n        let reqObject ={\n            \"model_name\": \"exam\",\n            \"model_id\": exam_id\n        }\n        this.props.deleteExam(reqObject)\n\n    }\n\n    render() {\n        const isTutor = this.props.isTutor;\n        if(this.props.loading) return <Loading />\n        //redirects to Not found page if the getExamsList API fails\n        return Object.keys(this.props.examList).length === 0? <NotFound />:\n        (\n            <div className=\"dashboard_body\">\n                <div className=\"dashboard_subSection\">\n                    <div className=\"quoteWrapper\">\n                        <FontAwesomeIcon icon={iconMapping[\"QuoteLeft\"]} size=\"2x\" style={{color: \"gray\"}} />&nbsp;\n                        <span className=\"quoteContent\">Believe you can & you're halfway there </span>\n                        <span className=\"author\">- T Roosevelt</span>\n                    </div>\n                    <ToastContainer />\n                    <br/>\n                    <ExamList {...this.props} isTutor={isTutor} handleDelete={this.handleDelete} />\n                    <br />\n                    {\n                    isTutor ?\n                        <button \n                            type=\"button\" \n                            className=\"btn btn-info getSatProSecondaryButton\" \n                            onClick={() => {\n                            this.props.history.push({\n                                pathname: '/CreateExam',\n                            })\n                        }}>\n                            <FontAwesomeIcon icon={iconMapping[\"Plus\"]} size=\"1x\" />\n                            &nbsp;<span>Add Exam</span>\n                        </button>\n                    : ''\n                    }\n                </div>\n            </div>\n        )\n    }\n}\nexport default withRouter(Exams);"]},"metadata":{},"sourceType":"module"}