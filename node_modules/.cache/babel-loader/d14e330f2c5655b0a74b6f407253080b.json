{"ast":null,"code":"var _jsxFileName = \"/Users/annuabraham/Documents/GitHub/ENPM613/client/src/components/registration/index.js\";\nimport React, { Component } from 'react';\nimport Modal from \"react-responsive-modal\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser, faLock, faEnvelope, faPhone, faUserCircle } from '@fortawesome/free-solid-svg-icons';\nimport './registeration.css';\nimport ErrorMessage from \"../ErrorMessage\";\nimport { withRouter } from \"react-router-dom\";\nimport ToastContainer from \"../toast\";\n\nclass Registration extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      let registrationInfo = this.state.registrationInfo;\n\n      if (e.target.name !== \"terms\") {\n        registrationInfo[e.target.name] = e.target.value;\n        this.setState({\n          registrationInfo\n        });\n      } else {\n        this.setState({\n          isTermsChecked: e.target.checked\n        });\n      }\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.validateField(\"fname\");\n      this.validateField(\"lname\");\n      this.validateField(\"password\");\n      this.validateField(\"username\");\n      this.validateField(\"email\");\n      this.validateField(\"phone\");\n      this.validateField(\"terms\");\n\n      if (this.state.fnameError === \"\" && this.state.lnameError === \"\" && this.state.passwordError === \"\" && this.state.phoneError === \"\" && this.state.emailIdError === \"\" && this.state.termsError === \"\" && this.state.usernameError === \"\") {\n        this.props.registerUser(this.state.registrationInfo);\n        this.props.onCloseModal();\n      }\n    };\n\n    this.validateField = field => {\n      let fname = this.state.registrationInfo[\"fname\"];\n      let lname = this.state.registrationInfo[\"lname\"];\n      let password = this.state.registrationInfo[\"password\"];\n      let username = this.state.registrationInfo[\"username\"];\n      let email = this.state.registrationInfo[\"email\"];\n      let phone = this.state.registrationInfo[\"phone\"];\n\n      switch (field) {\n        case \"fname\":\n          {\n            if (fname === \"\") {\n              this.setState({\n                fnameError: \"First name is required\"\n              });\n            } else {\n              if (!/^[a-zA-Z]+$/.test(fname)) {\n                this.setState({\n                  fnameError: \"Please enter a valid first name\"\n                });\n              } else {\n                this.setState({\n                  fnameError: \"\"\n                });\n              }\n            }\n          }\n          break;\n\n        case \"lname\":\n          {\n            if (lname === \"\") {\n              this.setState({\n                lnameError: \"Last name is required\"\n              });\n            } else {\n              if (!/^[a-zA-Z]+$/.test(lname)) {\n                this.setState({\n                  lnameError: \"Please enter a valid last name\"\n                });\n              } else {\n                this.setState({\n                  lnameError: \"\"\n                });\n              }\n            }\n          }\n          break;\n\n        case \"password\":\n          {\n            if (password === \"\") {\n              this.setState({\n                passwordError: \"Password is required\"\n              });\n            } else {\n              this.setState({\n                passwordError: \"\"\n              });\n            }\n          }\n          break;\n\n        case \"username\":\n          {\n            if (username === \"\") {\n              this.setState({\n                usernameError: \"Username is required\"\n              });\n            } else {\n              this.setState({\n                usernameError: \"\"\n              });\n            }\n          }\n          break;\n\n        case \"email\":\n          {\n            if (email === \"\") {\n              this.setState({\n                emailIdError: \"Email id is required\"\n              });\n            } else {\n              if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n                this.setState({\n                  emailIdError: \"Please enter a valid email\"\n                });\n              } else {\n                this.setState({\n                  emailIdError: \"\"\n                });\n              }\n            }\n          }\n          break;\n\n        case \"phone\":\n          {\n            if (phone === \"\") {\n              this.setState({\n                phoneError: \"Phone number is required\"\n              });\n            } else {\n              if (/^[a-zA-Z]+$/.test(phone)) {\n                this.setState({\n                  phoneError: \"Please enter a valid phone number\"\n                });\n              } else {\n                this.setState({\n                  phoneError: \"\"\n                });\n              }\n            }\n          }\n          break;\n\n        case \"terms\":\n          {\n            if (this.state.isTermsChecked === false) {\n              this.setState({\n                termsError: \"Please read the terms and conditions\"\n              });\n            } else {\n              this.setState({\n                termsError: \"\"\n              });\n            }\n          }\n      }\n    };\n\n    this.state = {\n      registrationInfo: {\n        fname: \"\",\n        lname: \"\",\n        username: \"\",\n        password: \"\",\n        emailId: \"\",\n        phone: \"\",\n        role_id: 1\n      },\n      fnameError: \"\",\n      lnameError: \"\",\n      usernameError: \"\",\n      passwordError: \"\",\n      emailIdError: \"\",\n      phoneError: \"\",\n      isFormValid: false,\n      isTermsChecked: false,\n      termsError: \"\",\n      showToast: false\n    };\n  }\n\n  render() {\n    console.log(\"Registration\", this.state);\n    return React.createElement(Modal, {\n      open: this.props.showModal,\n      onClose: this.props.onCloseModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, this.props.toastMessage === \"\" ? \"\" : React.createElement(ToastContainer, {\n      showToast: this.state.showToast,\n      content: this.props.toastMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"RegistrationWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Sign Up\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group nameField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faUser,\n      size: \"2x\",\n      color: \"gray\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"fname\",\n      placeholder: \"Your First name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"lname\",\n      placeholder: \"Your last name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      content: this.state.fnameError,\n      messageType: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      content: this.state.lnameError,\n      messageType: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faUserCircle,\n      size: \"2x\",\n      color: \"gray\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      placeholder: \"Your username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      content: this.state.usernameError,\n      messageType: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faLock,\n      size: \"2x\",\n      color: \"gray\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      id: \"password\",\n      placeholder: \"Your password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      content: this.state.passwordError,\n      messageType: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faEnvelope,\n      size: \"2x\",\n      color: \"gray\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"email\",\n      placeholder: \"Your email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      content: this.state.emailIdError,\n      messageType: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faPhone,\n      size: \"2x\",\n      color: \"gray\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"phone\",\n      placeholder: \"Your phone number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      content: this.state.phoneError,\n      messageType: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"terms\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }), \" I read and agree to \", React.createElement(\"a\", {\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"Terms and Conditions\"), React.createElement(ErrorMessage, {\n      content: this.state.termsError,\n      messageType: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"btn btn-primary getSatProSubmitBtn\",\n      value: \"Sign Up\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"formFooter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, \"Already have an account? \", React.createElement(\"a\", {\n      href: \"#\",\n      onClick: this.props.openLoginModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"Sign In\"), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default withRouter(Registration);","map":{"version":3,"sources":["/Users/annuabraham/Documents/GitHub/ENPM613/client/src/components/registration/index.js"],"names":["React","Component","Modal","FontAwesomeIcon","faUser","faLock","faEnvelope","faPhone","faUserCircle","ErrorMessage","withRouter","ToastContainer","Registration","constructor","props","handleChange","e","registrationInfo","state","target","name","value","setState","isTermsChecked","checked","handleSubmit","preventDefault","validateField","fnameError","lnameError","passwordError","phoneError","emailIdError","termsError","usernameError","registerUser","onCloseModal","field","fname","lname","password","username","email","phone","test","emailId","role_id","isFormValid","showToast","render","console","log","showModal","toastMessage","openLoginModal"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Modal from \"react-responsive-modal\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser, faLock, faEnvelope, faPhone, faUserCircle } from '@fortawesome/free-solid-svg-icons';\nimport './registeration.css';\nimport ErrorMessage from \"../ErrorMessage\";\nimport { withRouter } from \"react-router-dom\";\nimport ToastContainer from \"../toast\";\n\nclass Registration extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            registrationInfo: { fname: \"\", lname: \"\", username: \"\", password: \"\", emailId: \"\", phone: \"\", role_id: 1 },\n            fnameError: \"\",\n            lnameError: \"\",\n            usernameError: \"\",\n            passwordError: \"\",\n            emailIdError: \"\",\n            phoneError: \"\",\n            isFormValid: false,\n            isTermsChecked: false,\n            termsError: \"\",\n            showToast: false\n        }\n    }\n\n    handleChange = (e) => {\n        let registrationInfo = this.state.registrationInfo;\n        if (e.target.name !== \"terms\") {\n            registrationInfo[e.target.name] = e.target.value;\n            this.setState({ registrationInfo })\n        }\n        else {\n            this.setState({isTermsChecked: e.target.checked})\n        }\n    }\n\n    handleSubmit = (e) =>{\n        e.preventDefault();\n        this.validateField(\"fname\");\n        this.validateField(\"lname\");\n        this.validateField(\"password\");\n        this.validateField(\"username\");\n        this.validateField(\"email\");\n        this.validateField(\"phone\");\n        this.validateField(\"terms\");\n\n        if(this.state.fnameError === \"\" && this.state.lnameError === \"\"&& \n        this.state.passwordError === \"\" && this.state.phoneError === \"\" &&\n        this.state.emailIdError === \"\" && this.state.termsError === \"\"&&\n        this.state.usernameError === \"\"){\n            this.props.registerUser(this.state.registrationInfo);\n            this.props.onCloseModal();\n        } \n    }\n\n    validateField = (field) =>{\n        \n        let fname = this.state.registrationInfo[\"fname\"];\n        let lname = this.state.registrationInfo[\"lname\"];\n        let password = this.state.registrationInfo[\"password\"];\n        let username = this.state.registrationInfo[\"username\"];\n        let email = this.state.registrationInfo[\"email\"];\n        let phone = this.state.registrationInfo[\"phone\"];\n\n         switch(field){\n             case \"fname\": {\n                 if(fname === \"\"){\n                     this.setState({fnameError: \"First name is required\"});\n                 }\n                 else {\n                     if(!/^[a-zA-Z]+$/.test(fname)){\n                     this.setState({fnameError: \"Please enter a valid first name\"});\n                     }\n                     else{\n                         this.setState({fnameError: \"\"});\n                     }\n                 }\n             } break;\n             case \"lname\": {\n                if(lname === \"\"){\n                    this.setState({lnameError: \"Last name is required\"});\n                }\n                else {\n                    if(!/^[a-zA-Z]+$/.test(lname)){\n                    this.setState({lnameError: \"Please enter a valid last name\"});\n                    }\n                    else{\n                        this.setState({lnameError: \"\"});\n                    }\n                }\n             } break;\n             case \"password\": {\n                if(password === \"\"){\n                    this.setState({passwordError: \"Password is required\"});\n                }\n                else{\n                    this.setState({passwordError: \"\"});\n                }\n             } break;\n             case \"username\":{\n                 if(username === \"\"){\n                     this.setState({usernameError: \"Username is required\"})\n                 }\n                 else{\n                    this.setState({usernameError: \"\"});\n                 }\n             } break;\n             case \"email\":{\n                if(email === \"\"){\n                    this.setState({emailIdError: \"Email id is required\"})\n                }\n                else {\n                    if(!/\\S+@\\S+\\.\\S+/.test(email)){\n                        this.setState({emailIdError:\"Please enter a valid email\"})\n                    }\n                    else{\n                        this.setState({emailIdError: \"\"})\n                    }\n                }\n             } break;\n             case \"phone\":{\n                 if(phone === \"\") {\n                     this.setState({phoneError: \"Phone number is required\"})\n                 }\n                 else{\n                    if(/^[a-zA-Z]+$/.test(phone)){\n                        this.setState({phoneError: \"Please enter a valid phone number\"})\n                    }\n                    else{\n                        this.setState({phoneError: \"\"});\n                    }\n                 }\n             } break;\n             case \"terms\":{\n                 if(this.state.isTermsChecked === false){\n                     this.setState({termsError: \"Please read the terms and conditions\"})\n                 }\n                 else{\n                    this.setState({termsError: \"\"})\n                 }\n             }\n         }\n\n    }\n\n    render() {\n        console.log(\"Registration\", this.state);\n        \n        return (\n            <Modal open={this.props.showModal} onClose={this.props.onCloseModal}>\n                {\n                    this.props.toastMessage === \"\" ? \"\" : <ToastContainer showToast = {this.state.showToast} content={this.props.toastMessage} />\n                }\n                <div className=\"RegistrationWrapper\">\n                    <br />\n                    <h3>Sign Up</h3>\n                    <hr />\n                    <form onSubmit={this.handleSubmit} onChange={this.handleChange}>\n                        <div className=\"form-group nameField\" >\n                            <FontAwesomeIcon icon={faUser} size=\"2x\" color=\"gray\" />\n                            <input type=\"text\" name=\"fname\"\n                                placeholder=\"Your First name\"\n                            />\n                            <input type=\"text\" name=\"lname\"\n                                placeholder=\"Your last name\"\n                            />\n                            <ErrorMessage content={this.state.fnameError} messageType=\"error\" />\n                            <ErrorMessage content={this.state.lnameError} messageType=\"error\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <FontAwesomeIcon icon={faUserCircle} size=\"2x\" color=\"gray\" />\n                            <input type=\"text\" name=\"username\"\n                                placeholder=\"Your username\"\n                            />\n                            <ErrorMessage content={this.state.usernameError} messageType=\"error\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <FontAwesomeIcon icon={faLock} size=\"2x\" color=\"gray\" />\n                            <input type=\"password\" name=\"password\"\n                                id=\"password\"\n                                placeholder=\"Your password\"\n                            />\n                            <ErrorMessage content={this.state.passwordError} messageType=\"error\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <FontAwesomeIcon icon={faEnvelope} size=\"2x\" color=\"gray\" />\n                            <input type=\"text\" name=\"email\"\n                                placeholder=\"Your email\"\n                            />\n                            <ErrorMessage content={this.state.emailIdError} messageType=\"error\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <FontAwesomeIcon icon={faPhone} size=\"2x\" color=\"gray\" />\n                            <input type=\"text\" name=\"phone\"\n                                placeholder=\"Your phone number\"\n                            />\n                            <ErrorMessage content={this.state.phoneError} messageType=\"error\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <input type=\"checkbox\" name=\"terms\"\n                            /> I read and agree to <a href=\"/\">Terms and Conditions</a>\n                            <ErrorMessage content={this.state.termsError} messageType=\"error\" />\n                        </div>\n                        <input type=\"submit\"\n                            className=\"btn btn-primary getSatProSubmitBtn\"\n                            value=\"Sign Up\"\n                        />\n                        <div className=\"formFooter\">\n                            Already have an account? <a href=\"#\" onClick={this.props.openLoginModal}>Sign In</a> <br />\n                        </div>\n                    </form>\n                </div>\n            </Modal>)\n    }\n}\nexport default withRouter(Registration);"]},"metadata":{},"sourceType":"module"}