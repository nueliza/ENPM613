{"ast":null,"code":"var _jsxFileName = \"/Users/annuabraham/Documents/GitHub/ENPM613/client/src/components/exams/createExam.js\";\nimport React, { Component, Fragment } from 'react';\nimport { iconMapping } from \"../utils/iconsMapping.js\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport \"./exams.css\";\nimport ErrorMessage from \"../ErrorMessage\";\n\nconst QuestionInput = props => {\n  return props.Exam.map((item, id) => {\n    let questionId = \"qn-\".concat(id),\n        answerId = \"ans-\".concat(id);\n    return React.createElement(\"div\", {\n      className: \"questionWrapper\",\n      key: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \"Question number \", id + 1), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"question\",\n      \"data-id\": id,\n      id: questionId,\n      className: \"inputField\",\n      placeholder: \"Type Question here...\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    })), id > 0 ? React.createElement(FontAwesomeIcon, {\n      className: \"icon\",\n      \"data-id\": id,\n      onClick: props.deleteQuestion,\n      icon: iconMapping[\"Trash\"],\n      style: {\n        color: \"var(--alert-color)\"\n      },\n      size: \"1x\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }) : '', React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(OptionsInput, {\n      item: item,\n      id: id,\n      deleteOption: props.deleteOption,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), item.options.length === 4 ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(ErrorMessage, {\n      content: \"You have reached the maximum number of options\",\n      messageType: \"warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    })) : React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      onClick: props.addOption,\n      \"data-id\": id,\n      className: \"btn btn-info getSatProSecondaryButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: iconMapping[\"Plus\"],\n      size: \"1x\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), \"\\xA0Add Option\")), React.createElement(\"div\", {\n      className: \"group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \" Correct Answer\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"answer\",\n      \"data-id\": id,\n      id: answerId,\n      className: \"answer\",\n      placeholder: \"Type correct answer here...\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })));\n  });\n};\n\nconst OptionsInput = props => {\n  return props.item.options.map((val, idx) => {\n    //let optionId = `opt-${props.id}-${idx}`;\n    return React.createElement(\"div\", {\n      className: \"optionsWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \" Option \", idx + 1), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"inputField\",\n      name: \"options\",\n      \"data-id\": props.id,\n      id: idx,\n      placeholder: \"Type Option here...\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })), idx > 1 ? React.createElement(FontAwesomeIcon, {\n      \"data-id\": props.id,\n      className: \"icon\",\n      name: idx,\n      id: idx,\n      onClick: props.deleteOption,\n      icon: iconMapping[\"Trash\"],\n      style: {\n        color: \"var(--alert-color)\"\n      },\n      size: \"1x\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }) : '');\n  });\n};\n\nclass CreateExam extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addQuestion = e => {\n      e.preventDefault();\n      this.setState(prevState => ({\n        Exam: [...prevState.Exam, {\n          question: \"\",\n          options: [\"\", \"\"],\n          answer: \"\"\n        }]\n      }));\n    };\n\n    this.addOption = e => {\n      e.preventDefault();\n      let id = e.target.dataset.id;\n      let updatedExam = this.state.Exam;\n      updatedExam[id].options = [...updatedExam[id].options, \"\"];\n      this.setState({\n        Exam: updatedExam\n      });\n    };\n\n    this.deleteQuestion = e => {\n      let questionId = e.currentTarget.dataset.id;\n      var updatedExam = this.state.Exam;\n      updatedExam.splice(questionId, 1);\n      this.setState({\n        Exam: updatedExam\n      });\n    };\n\n    this.deleteOption = e => {\n      let questionId = e.currentTarget.dataset.id;\n      let optionId = e.currentTarget.id;\n      var updatedExam = this.state.Exam;\n      updatedExam[questionId].options.splice(optionId, 1);\n      this.setState({\n        Exam: updatedExam\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault(); //TODO: Input field validations\n\n      this.props.createExam(this.state.Exam);\n      this.props.history.push(\"/exams\");\n    };\n\n    this.handleChange = e => {\n      let Exam = [...this.state.Exam];\n\n      if (e.target.name === \"options\") {\n        Exam[e.target.dataset.id][\"options\"][e.target.id] = e.target.value;\n      } else {\n        Exam[e.target.dataset.id][e.target.name] = e.target.value;\n      }\n\n      this.setState({\n        Exam\n      });\n    };\n\n    this.state = {\n      Exam: [{\n        question: \"\",\n        options: [\"\", \"\"],\n        answer: \"\"\n      }],\n      errors: []\n    };\n  }\n\n  render() {\n    //<h3>Create {this.props.location.state.selectedSubModule} Exam</h3>\n    return React.createElement(\"div\", {\n      className: \"dashboard_body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Create Exam for Algebra\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(QuestionInput, {\n      Exam: this.state.Exam,\n      addOption: this.addOption,\n      deleteOption: this.deleteOption,\n      deleteQuestion: this.deleteQuestion,\n      errors: this.state.errors,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), this.state.Exam.length === 20 ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(ErrorMessage, {\n      content: \"You have reached the maximum number of questions\",\n      messageType: \"warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    })) : React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.addQuestion,\n      className: \"btn btn-info getSatProSecondaryButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: iconMapping[\"Plus\"],\n      size: \"1x\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }), \"\\xA0Add Question\"), \" \\xA0\\xA0\"), React.createElement(\"button\", {\n      className: \"btn btn-success getSatProSubmitBtn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nexport default CreateExam;","map":{"version":3,"sources":["/Users/annuabraham/Documents/GitHub/ENPM613/client/src/components/exams/createExam.js"],"names":["React","Component","Fragment","iconMapping","FontAwesomeIcon","ErrorMessage","QuestionInput","props","Exam","map","item","id","questionId","answerId","deleteQuestion","color","deleteOption","options","length","addOption","OptionsInput","val","idx","CreateExam","constructor","addQuestion","e","preventDefault","setState","prevState","question","answer","target","dataset","updatedExam","state","currentTarget","splice","optionId","handleSubmit","createExam","history","push","handleChange","name","value","errors","render"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { iconMapping } from \"../utils/iconsMapping.js\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport \"./exams.css\";\nimport ErrorMessage from \"../ErrorMessage\";\n\nconst QuestionInput = (props) => {\n    return (\n        props.Exam.map((item, id) => {\n            let questionId = `qn-${id}`, answerId = `ans-${id}`;\n            return (\n                <div className=\"questionWrapper\" key={id}>\n                    <div className=\"group\">\n                        <span className=\"label\">Question number {id + 1}</span>\n                        <input type=\"text\"\n                            name=\"question\"\n                            data-id={id}\n                            id={questionId}\n                            className=\"inputField\"\n                            placeholder=\"Type Question here...\"\n                            required\n                        />\n                    </div>\n                    {id > 0 ? <FontAwesomeIcon\n                        className=\"icon\"\n                        data-id={id}\n                        onClick={props.deleteQuestion}\n                        icon={iconMapping[\"Trash\"]}\n                        style={{color: \"var(--alert-color)\"}}\n                        size=\"1x\" /> : ''}\n                    <br />\n                    <OptionsInput item={item} id={id} deleteOption={props.deleteOption}/>\n                    {item.options.length === 4? \n                        <Fragment>\n                            <ErrorMessage content=\"You have reached the maximum number of options\" messageType=\"warning\" />\n                            <br />\n                        </Fragment>\n                        :\n                        <Fragment> \n                            <br/>\n                            <div onClick={props.addOption} data-id={id} className=\"btn btn-info getSatProSecondaryButton\">\n                                <FontAwesomeIcon\n                                    icon={iconMapping[\"Plus\"]}\n                                    size=\"1x\" />\n                                &nbsp;Add Option\n                            </div>\n                        </Fragment>\n                       \n                    }\n                    \n                    <div className=\"group\">\n                        <span className=\"label\"> Correct Answer</span>\n                        <input type=\"text\"\n                            name=\"answer\"\n                            data-id={id}\n                            id={answerId}\n                            className=\"answer\"\n                            placeholder=\"Type correct answer here...\"\n                            required\n                        />\n                    </div>\n                </div>\n            )\n        })\n    )\n}\n\nconst OptionsInput = (props) => {\n    return (\n        props.item.options.map((val, idx) => {\n            //let optionId = `opt-${props.id}-${idx}`;\n            return (\n                <div className=\"optionsWrapper\">\n                    <div className=\"group\">\n                        <span className=\"label\"> Option {idx + 1}</span>\n                        <input type=\"text\"\n                            className=\"inputField\"\n                            name=\"options\"\n                            data-id={props.id}\n                            id={idx}\n                            placeholder=\"Type Option here...\"\n                            required\n                        />\n                    </div>\n                    {idx > 1 ? <FontAwesomeIcon\n                        data-id={props.id}\n                        className=\"icon\"\n                        name={idx}\n                        id={idx}\n                        onClick={props.deleteOption}\n                        icon={iconMapping[\"Trash\"]}\n                        style={{color: \"var(--alert-color)\"}}\n                        size=\"1x\" /> : ''}\n                </div>\n            )\n        })\n    )\n}\nclass CreateExam extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            Exam: [{ question: \"\", options: [\"\", \"\"], answer: \"\" }],\n            errors: []\n        }\n    }\n\n    addQuestion = (e) => {\n        e.preventDefault()\n        this.setState((prevState) => ({\n            Exam: [...prevState.Exam, { question: \"\", options: [\"\", \"\"], answer: \"\" }]\n        }));\n    }\n\n    addOption = (e) => {\n        e.preventDefault()\n        let id = e.target.dataset.id;\n        let updatedExam = this.state.Exam;\n        updatedExam[id].options = [...updatedExam[id].options, \"\"];\n        this.setState({ Exam: updatedExam });\n    }\n\n    deleteQuestion = (e) => {\n        let questionId = e.currentTarget.dataset.id;\n        var updatedExam = this.state.Exam;\n        updatedExam.splice(questionId, 1)\n        this.setState({ Exam: updatedExam });\n    }\n\n    deleteOption = (e) => {\n        let questionId = e.currentTarget.dataset.id;\n        let optionId = e.currentTarget.id;\n        var updatedExam = this.state.Exam;\n        updatedExam[questionId].options.splice(optionId, 1);\n        this.setState({ Exam: updatedExam })\n\n    }\n\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        //TODO: Input field validations\n        \n        this.props.createExam(this.state.Exam);\n        this.props.history.push(\"/exams\")\n        \n    }\n\n//    isFormValid = (value, itemId) =>{\n\n//         if(value === \"\"){\n//             this.setState({\n//                 errors: this.state.errors.push({ id: itemId, message: \"This field is required\" })\n//             });\n//             console.log(\"isFormValid\", this.state.errors);\n//         }\n//    }\n\n    handleChange = (e) => {\n        let Exam = [...this.state.Exam]\n        if (e.target.name === \"options\") {\n            Exam[e.target.dataset.id][\"options\"][e.target.id] = e.target.value;\n        } else {\n            Exam[e.target.dataset.id][e.target.name] = e.target.value;\n        }\n        this.setState({ Exam });\n    }\n\n    render() {\n        //<h3>Create {this.props.location.state.selectedSubModule} Exam</h3>\n        return (\n            <div className=\"dashboard_body\">\n                <h3>Create Exam for Algebra</h3>\n                <form onSubmit={this.handleSubmit} onChange={this.handleChange}>\n                    <QuestionInput\n                        Exam={this.state.Exam}\n                        addOption={this.addOption}\n                        deleteOption={this.deleteOption}\n                        deleteQuestion={this.deleteQuestion}\n                        errors ={this.state.errors}\n                    />\n                    <br />\n                    {this.state.Exam.length === 20? \n                        <Fragment>\n                            <ErrorMessage content=\"You have reached the maximum number of questions\" messageType=\"warning\" />\n                            <br />\n                        </Fragment>\n                        :\n                        <Fragment>\n                            <button onClick={this.addQuestion} className=\"btn btn-info getSatProSecondaryButton\">\n                            <FontAwesomeIcon icon={iconMapping[\"Plus\"]} size=\"1x\" />\n                            &nbsp;Add Question\n                            </button> &nbsp;&nbsp;\n                        </Fragment>\n                    }\n                    <button className=\"btn btn-success getSatProSubmitBtn\" >\n                        Submit\n                    </button>\n                </form>\n            </div>\n        )\n    }\n}\nexport default CreateExam;"]},"metadata":{},"sourceType":"module"}