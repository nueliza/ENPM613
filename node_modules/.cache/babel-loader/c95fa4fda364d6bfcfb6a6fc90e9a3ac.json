{"ast":null,"code":"/**\n * Conatins all the service handlers for the student related actions\n */\nimport * as actionTypes from \"./actionTypes\";\nimport axios from \"axios\";\naxios.defaults.baseURL = 'https://get-sat-pro.herokuapp.com/api';\naxios.defaults.headers.common['Accept'] = 'application/json';\naxios.defaults.headers.post['Content-Type'] = 'application/json';\nthis.localStorage.getItem('token').then(value => {\n  axios.defaults.headers.common['Authorization'] = \"Bearer \".concat(value);\n}); //axios.defaults.headers.common['Authorization'] = `Bearer ${localStorage.getItem(\"token\")}` \n\naxios.defaults.withCredentials = true;\n/**\n * gets the list of students after communicating with the get_students API\n */\n//credentials: 'include' sends the cookie along with request. fetch by default does not inlude cookies\n\nexport function getStudentList() {\n  return async dispatch => {\n    dispatch({\n      type: actionTypes.GET_STUDENT_LIST_STARTED\n    });\n    return axios.get(\"/get_students\").then(result => {\n      dispatch({\n        type: actionTypes.GET_STUDENT_LIST_SUCCESS,\n        payload: result.data.students\n      });\n    }).catch(error => {\n      dispatch({\n        type: actionTypes.GET_STUDENT_LIST_SUCCESS,\n        error: error.response.message\n      });\n    });\n  };\n}\nexport function getModulesList(reqObject) {\n  return async dispatch => {\n    dispatch({\n      type: actionTypes.GET_MODULE_LIST_STARTED\n    });\n    return axios.post(\"get_modules\", reqObject).then(response => {\n      dispatch({\n        type: actionTypes.GET_MODULE_LIST_SUCCESS,\n        payload: response.data.mod_list\n      });\n    }).catch(error => {\n      dispatch({\n        type: actionTypes.GET_MODULE_LIST_FAILED,\n        error: error.response.data.message\n      });\n    });\n  };\n}","map":{"version":3,"sources":["/Users/annuabraham/Documents/GitHub/ENPM613/src/actions/studentHandler.js"],"names":["actionTypes","axios","defaults","baseURL","headers","common","post","localStorage","getItem","then","value","withCredentials","getStudentList","dispatch","type","GET_STUDENT_LIST_STARTED","get","result","GET_STUDENT_LIST_SUCCESS","payload","data","students","catch","error","response","message","getModulesList","reqObject","GET_MODULE_LIST_STARTED","GET_MODULE_LIST_SUCCESS","mod_list","GET_MODULE_LIST_FAILED"],"mappings":"AAAA;;;AAGA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEAA,KAAK,CAACC,QAAN,CAAeC,OAAf,GAAyB,uCAAzB;AACAF,KAAK,CAACC,QAAN,CAAeE,OAAf,CAAuBC,MAAvB,CAA8B,QAA9B,IAA0C,kBAA1C;AACAJ,KAAK,CAACC,QAAN,CAAeE,OAAf,CAAuBE,IAAvB,CAA4B,cAA5B,IAA8C,kBAA9C;AACA,KAAKC,YAAL,CAAkBC,OAAlB,CAA0B,OAA1B,EAAmCC,IAAnC,CAAyCC,KAAD,IAAW;AAC/CT,EAAAA,KAAK,CAACC,QAAN,CAAeE,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,qBAA2DK,KAA3D;AACC,CAFL,E,CAGA;;AACAT,KAAK,CAACC,QAAN,CAAeS,eAAf,GAAiC,IAAjC;AAGA;;;AAIA;;AACA,OAAO,SAASC,cAAT,GAA0B;AAC7B,SAAO,MAAMC,QAAN,IAAkB;AACrBA,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEd,WAAW,CAACe;AADb,KAAD,CAAR;AAGA,WAAOd,KAAK,CAACe,GAAN,kBACNP,IADM,CACDQ,MAAM,IAAI;AACZJ,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAEd,WAAW,CAACkB,wBADb;AAELC,QAAAA,OAAO,EAAEF,MAAM,CAACG,IAAP,CAAYC;AAFhB,OAAD,CAAR;AAIH,KANM,EAONC,KAPM,CAOAC,KAAK,IAAG;AACXV,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAEd,WAAW,CAACkB,wBADb;AAELK,QAAAA,KAAK,EAAEA,KAAK,CAACC,QAAN,CAAeC;AAFjB,OAAD,CAAR;AAIH,KAZM,CAAP;AAaL,GAjBC;AAkBH;AAED,OAAO,SAASC,cAAT,CAAwBC,SAAxB,EAAmC;AACtC,SAAO,MAAMd,QAAN,IAAkB;AACrBA,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEd,WAAW,CAAC4B;AADb,KAAD,CAAR;AAGA,WAAO3B,KAAK,CAACK,IAAN,gBAA0BqB,SAA1B,EACNlB,IADM,CACDe,QAAQ,IAAI;AACdX,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAEd,WAAW,CAAC6B,uBADb;AAELV,QAAAA,OAAO,EAAEK,QAAQ,CAACJ,IAAT,CAAcU;AAFlB,OAAD,CAAR;AAIH,KANM,EAONR,KAPM,CAOCC,KAAK,IAAG;AACZV,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAEd,WAAW,CAAC+B,sBADb;AAELR,QAAAA,KAAK,EAAEA,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK;AAFtB,OAAD,CAAR;AAIH,KAZM,CAAP;AAaH,GAjBD;AAkBH","sourcesContent":["/**\n * Conatins all the service handlers for the student related actions\n */\nimport * as actionTypes from \"./actionTypes\";\nimport axios from \"axios\";\n\naxios.defaults.baseURL = 'https://get-sat-pro.herokuapp.com/api';\naxios.defaults.headers.common['Accept'] = 'application/json';\naxios.defaults.headers.post['Content-Type'] = 'application/json';\nthis.localStorage.getItem('token').then((value) => {\n    axios.defaults.headers.common['Authorization'] = `Bearer ${value}` \n    });\n//axios.defaults.headers.common['Authorization'] = `Bearer ${localStorage.getItem(\"token\")}` \naxios.defaults.withCredentials = true\n\n\n/**\n * gets the list of students after communicating with the get_students API\n */\n\n//credentials: 'include' sends the cookie along with request. fetch by default does not inlude cookies\nexport function getStudentList() {\n    return async dispatch => {\n        dispatch({\n            type: actionTypes.GET_STUDENT_LIST_STARTED\n        });\n        return axios.get(`/get_students`)\n        .then(result => {\n            dispatch({\n                type: actionTypes.GET_STUDENT_LIST_SUCCESS,\n                payload: result.data.students\n            })\n        })\n        .catch(error =>{\n            dispatch({\n                type: actionTypes.GET_STUDENT_LIST_SUCCESS,\n                error: error.response.message\n            });\n        })\n  }\n}\n\nexport function getModulesList(reqObject) {\n    return async dispatch => {\n        dispatch({\n            type: actionTypes.GET_MODULE_LIST_STARTED\n        })\n        return axios.post(`get_modules`, reqObject)\n        .then(response => {\n            dispatch({\n                type: actionTypes.GET_MODULE_LIST_SUCCESS,\n                payload: response.data.mod_list\n            });\n        })\n        .catch( error =>{\n            dispatch({\n                type: actionTypes.GET_MODULE_LIST_FAILED,\n                error: error.response.data.message\n            });\n        })\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}