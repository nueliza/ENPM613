{"ast":null,"code":"var _jsxFileName = \"/Users/annuabraham/Documents/GitHub/ENPM613/client/src/components/toast/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Toast, ToastBody } from 'reactstrap';\nimport { resetToast } from \"../../actions/actions\";\n\nclass ToastContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    console.log(\"HERE\", this.state.showToast);\n    setTimeout(function () {\n      this.props.resetToast();\n    }.bind(this), 5000);\n    return this.props.toastMessage === \"\" ? React.createElement(Toast, {\n      isOpen: this.props.showToast,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(ToastBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, this.props.toastMessage)) : \"\";\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    resetToast: () => dispatch(resetToast())\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    toastMessage: state.toast.toastMessage\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ToastContainer);","map":{"version":3,"sources":["/Users/annuabraham/Documents/GitHub/ENPM613/client/src/components/toast/index.js"],"names":["React","Component","connect","Toast","ToastBody","resetToast","ToastContainer","constructor","props","state","render","console","log","showToast","setTimeout","bind","toastMessage","mapDispatchToProps","dispatch","mapStateToProps","toast"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,SAASC,UAAT,QAA2B,uBAA3B;;AAEA,MAAMC,cAAN,SAA6BL,SAA7B,CAAuC;AACnCM,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAY,EAAZ;AAGH;;AACDC,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoB,KAAKH,KAAL,CAAWI,SAA/B;AACAC,IAAAA,UAAU,CAAC,YAAU;AAAE,WAAKN,KAAL,CAAWH,UAAX;AAAyB,KAArC,CAAsCU,IAAtC,CAA2C,IAA3C,CAAD,EAAkD,IAAlD,CAAV;AACA,WACI,KAAKP,KAAL,CAAWQ,YAAX,KAA4B,EAA5B,GACA,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAE,KAAKR,KAAL,CAAWK,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKL,KAAL,CAAWQ,YADhB,CADJ,CADA,GAMC,EAPL;AASH;;AAnBkC;;AAqBvC,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAM;AACFb,IAAAA,UAAU,EAAE,MAAMa,QAAQ,CAACb,UAAU,EAAX;AADxB,GAAN;AAGH,CAJD;;AAMA,MAAMc,eAAe,GAAIV,KAAF,IAAW;AAC9B,SAAM;AACFO,IAAAA,YAAY,EAAEP,KAAK,CAACW,KAAN,CAAYJ;AADxB,GAAN;AAGH,CAJD;;AAMA,eAAed,OAAO,CAAEiB,eAAF,EAAmBF,kBAAnB,CAAP,CAA8CX,cAA9C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Toast, ToastBody } from 'reactstrap';\nimport { resetToast } from \"../../actions/actions\";\n\nclass ToastContainer extends Component {\n    constructor(props){\n        super(props);\n        this.state ={\n            \n        }\n    }\n    render() {\n        console.log(\"HERE\", this.state.showToast);\n        setTimeout(function(){ this.props.resetToast();}.bind(this),5000);\n        return (\n            this.props.toastMessage === \"\"?\n            <Toast isOpen={this.props.showToast}>\n                <ToastBody>\n                    {this.props.toastMessage}\n                </ToastBody>\n            </Toast>\n            :\"\"\n        )\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        resetToast: () => dispatch(resetToast())\n    }\n}\n\nconst mapStateToProps =( state) =>{\n    return{\n        toastMessage: state.toast.toastMessage\n    }\n}\n    \nexport default connect( mapStateToProps, mapDispatchToProps)(ToastContainer)"]},"metadata":{},"sourceType":"module"}