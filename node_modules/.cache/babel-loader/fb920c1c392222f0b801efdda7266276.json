{"ast":null,"code":"import { connect } from 'react-redux';\nimport { loginUser, registerUser } from \"../actions/userActions\";\nimport Welcome from '../components/welcome';\nimport { resetToast } from \"../actions/actions\";\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loginUser: data => dispatch(loginUser(data)),\n    registerUser: data => dispatch(registerUser(data)),\n    resetToast: () => dispatch(resetToast())\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    loginPending: state.user.loginPending,\n    registrationPending: state.user.registrationPending,\n    toastMessage: state.toast.toastMessage\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Welcome);","map":{"version":3,"sources":["/Users/annuabraham/Documents/GitHub/ENPM613/client/src/containers/welcome.js"],"names":["connect","loginUser","registerUser","Welcome","resetToast","mapDispatchToProps","dispatch","data","mapStateToProps","state","loginPending","user","registrationPending","toastMessage","toast"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAAQC,SAAR,EAAmBC,YAAnB,QAAsC,wBAAtC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,UAAT,QAA2B,oBAA3B;;AAEA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAM;AACFL,IAAAA,SAAS,EAAGM,IAAD,IAAUD,QAAQ,CAACL,SAAS,CAACM,IAAD,CAAV,CAD3B;AAEFL,IAAAA,YAAY,EAAGK,IAAD,IAAUD,QAAQ,CAACJ,YAAY,CAACK,IAAD,CAAb,CAF9B;AAGFH,IAAAA,UAAU,EAAE,MAAME,QAAQ,CAACF,UAAU,EAAX;AAHxB,GAAN;AAKH,CAND;;AAQA,MAAMI,eAAe,GAAIC,KAAF,IAAW;AAC9B,SAAM;AACFC,IAAAA,YAAY,EAAED,KAAK,CAACE,IAAN,CAAWD,YADvB;AAEFE,IAAAA,mBAAmB,EAAGH,KAAK,CAACE,IAAN,CAAWC,mBAF/B;AAGFC,IAAAA,YAAY,EAAEJ,KAAK,CAACK,KAAN,CAAYD;AAHxB,GAAN;AAKH,CAND;;AAQA,eAAeb,OAAO,CAAEQ,eAAF,EAAmBH,kBAAnB,CAAP,CAA8CF,OAA9C,CAAf","sourcesContent":["import { connect } from 'react-redux';\nimport {loginUser, registerUser} from \"../actions/userActions\";\nimport Welcome from '../components/welcome';\nimport { resetToast } from \"../actions/actions\";\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        loginUser: (data) => dispatch(loginUser(data)),\n        registerUser: (data) => dispatch(registerUser(data)),\n        resetToast: () => dispatch(resetToast())\n    }\n}\n\nconst mapStateToProps =( state) =>{\n    return{\n        loginPending: state.user.loginPending,\n        registrationPending:  state.user.registrationPending,\n        toastMessage: state.toast.toastMessage\n    }\n}\n    \nexport default connect( mapStateToProps, mapDispatchToProps)(Welcome)"]},"metadata":{},"sourceType":"module"}